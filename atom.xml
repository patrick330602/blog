<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WE. Studio</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.westudio.ml/"/>
  <updated>2016-06-16T00:32:33.802Z</updated>
  <id>http://www.westudio.ml/</id>
  
  <author>
    <name>Patrick J. Wu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Color With C#</title>
    <link href="http://www.westudio.ml/2016/06/2016-6-12-Color/"/>
    <id>http://www.westudio.ml/2016/06/2016-6-12-Color/</id>
    <published>2016-06-15T08:50:52.709Z</published>
    <updated>2016-06-16T00:32:33.802Z</updated>
    
    <content type="html">&lt;p&gt;  Recently, i am doing a research on a project to convert RGB to HSB, which leads me to an awesome &lt;a href=&quot;http://www.codeproject.com/Articles/19045/Manipulating-colors-in-NET-Part-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;article&lt;/a&gt; on CodeProject from 9 years ago. Hence, I sort the article a little bit to help myself understand more of color agorithm.&lt;/p&gt;
 &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Index&quot;&gt;&lt;a href=&quot;#Index&quot; class=&quot;headerlink&quot; title=&quot;Index&quot;&gt;&lt;/a&gt;Index&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;#def&quot;&gt;What is “Color”?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#cm&quot;&gt;Color models&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#rgb&quot;&gt;RGB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hsb&quot;&gt;HSB&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hsl&quot;&gt;HSL&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#cmyk&quot;&gt;CMYK&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#yuv&quot;&gt;YUV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#xyz&quot;&gt;Cie XYZ&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#lab&quot;&gt;Cie L*a*b*&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;#cbm&quot;&gt;Conversion between models&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#rgb2&quot;&gt;RGB to …&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#rgb2hsb&quot;&gt;a - RGB to HSB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rgb2hsl&quot;&gt;b - RGB to HSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rgb2cmyk&quot;&gt;c - RGB to CMYK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rgb2yuv&quot;&gt;d - RGB to YUV (YUV444)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rgb2wc&quot;&gt;e - RGB to web color&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rgb2xyz&quot;&gt;f - RGB to XYZ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rgb2lab&quot;&gt;g - RGB to L*a*b*&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hsb2&quot;&gt;HSB to…&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#hsb2rgb&quot;&gt;a - HSB to RGB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hsb2hsl&quot;&gt;b - HSB to HSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hsb2cmyk&quot;&gt;c - HSB to CMYK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hsb2yuv&quot;&gt;d - HSB to YUV&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hsl2&quot;&gt;HSL to…&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#hsl2rgb&quot;&gt;a - HSL to RGB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hsl2hsb&quot;&gt;b - HSL to HSB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hsl2cmyk&quot;&gt;c - HSL to CMYK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hsl2yuv&quot;&gt;d - HSL to YUV&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#cmyk2&quot;&gt;CMYK to…&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#cmyk2rgb&quot;&gt;a - CMYK to RGB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#cmyk2hsb&quot;&gt;b - CMYK to HSB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#cmyk2hsl&quot;&gt;c - CMYK to HSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#cmyk2yuv&quot;&gt;d - CMYK to YUV&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#yuv2&quot;&gt;YUV to…&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#yuv2rgb&quot;&gt;a - YUV to RGB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#yuv2hsb&quot;&gt;b - YUV to HSB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#yuv2hsl&quot;&gt;c - YUV to HSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#yuv2yuv&quot;&gt;d - YUV to YUV&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#xyz2&quot;&gt;Cie XYZ to…&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#xyz2rgb&quot;&gt;a - XYZ to RGB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#xyz2lab&quot;&gt;b - XYZ to L*a*b*&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#lab2&quot;&gt;Cie L*a*b* to…&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#lab2xyz&quot;&gt;a - L*a*b* to XYZ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#lab2rgb&quot;&gt;b - L*a*b* to RGB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;#utc&quot;&gt;Using the code&lt;/a&gt;  &lt;/p&gt;
&lt;h3 id=&quot;What-is-“Color”&quot;&gt;&lt;a href=&quot;#What-is-“Color”&quot; class=&quot;headerlink&quot; title=&quot;What is “Color”?&quot;&gt;&lt;/a&gt;What is “Color”?&lt;/h3&gt;&lt;p&gt;&lt;a name=&quot;def&quot; id=&quot;def&quot;&gt;&lt;/a&gt;“&lt;strong&gt;Color&lt;/strong&gt; (or colour, see spelling differences) is the visual perceptual property corresponding in humans to the categories called red, yellow, white, etc. Color derives from the spectrum of light (distribution of light energy versus wavelength) interacting in the eye with the spectral sensitivities of the light receptors. Color categories and physical specifications of color are also associated with objects, materials, light sources, etc., based on their physical properties such as light absorption, reflection, or emission spectra.&lt;/p&gt;
&lt;p&gt;“ &lt;a href=&quot;http://en.wikipedia.org/wiki/Color&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Color definition, Wikipedia.&lt;/a&gt;“&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Colorimetry&lt;/strong&gt; is the science that describes colors in numbers, or provides a physical color match using a variety of measurement instruments. Colorimetry is used in chemistry, and in industries such as color printing, textile manufacturing, paint manufacturing and in the food industry.”&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/Colorimetry&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colorimetry definition, Wikipedia.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then, how can we display colors as numbers? the answer: color models.&lt;/p&gt;
&lt;h3 id=&quot;Color-Models&quot;&gt;&lt;a href=&quot;#Color-Models&quot; class=&quot;headerlink&quot; title=&quot;Color Models&quot;&gt;&lt;/a&gt;Color Models&lt;/h3&gt;&lt;p&gt;&lt;a name=&quot;cm&quot; id=&quot;cm&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;RGB-Red-Green-Blue&quot;&gt;&lt;a href=&quot;#RGB-Red-Green-Blue&quot; class=&quot;headerlink&quot; title=&quot;RGB (Red Green Blue)&quot;&gt;&lt;/a&gt;RGB (Red Green Blue)&lt;/h4&gt;&lt;p&gt;&lt;a name=&quot;rgb&quot; id=&quot;rgb&quot;&gt;&lt;/a&gt;The &lt;strong&gt;RGB&lt;/strong&gt; (&lt;strong&gt;R&lt;/strong&gt;ed, &lt;strong&gt;G&lt;/strong&gt;reen, &lt;strong&gt;B&lt;/strong&gt;lue) color model is the most known, and the most used every day. It defines a color space in terms of three components: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;R&lt;/strong&gt;ed, which ranges from 0-255 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;G&lt;/strong&gt;reen, which ranges from 0-255 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B&lt;/strong&gt;lue, which ranges from 0-255 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;strong&gt;RGB&lt;/strong&gt; color model is an additive one. In other words, &lt;strong&gt;R&lt;/strong&gt;ed, &lt;strong&gt;G&lt;/strong&gt;reen and &lt;strong&gt;B&lt;/strong&gt;lue values (known as the three primary colors) are combined to reproduce other colors.&lt;/p&gt;
&lt;p&gt;For example, the color “Red” can be represented as [R=255, G=0, B=0], “Violet” as [R=238, G=130, B=238], etc.&lt;/p&gt;
&lt;p&gt;Its common graphic representation is the following image:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/color/rgb.png&quot; alt=&quot;RGB&quot;&gt; &lt;/p&gt;
&lt;p&gt;In .NET, the Color structure use this model to provide color support through R, G and B properties. &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Console.WriteLine(String.Format(&amp;quot;R=&amp;#123;0&amp;#125;, G=&amp;#123;1&amp;#125;, B=&amp;#123;2&amp;#125;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Color.Red.R, Color.Red.G, Color.Red.B);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Console.WriteLine(String.Format(&amp;quot;R=&amp;#123;0&amp;#125;, G=&amp;#123;1&amp;#125;, B=&amp;#123;2&amp;#125;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Color.Cyan.R, Color.Cyan.G, Color.Cyan.B);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Console.WriteLine(String.Format(&amp;quot;R=&amp;#123;0&amp;#125;, G=&amp;#123;1&amp;#125;, B=&amp;#123;2&amp;#125;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Color.White.R, Color.White.G, Color.White.B);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Console.WriteLine(String.Format(&amp;quot;R=&amp;#123;0&amp;#125;, G=&amp;#123;1&amp;#125;, B=&amp;#123;2&amp;#125;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Color.SteelBlue.R, Color.SteelBlue.G, Color.SteelBlue.B);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// etc...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;but this is not its only usage. For this reason, we can define a dedicated RGB structure for further coding, as shown below:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// RGB structure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public struct RGB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets an empty RGB structure;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static readonly RGB Empty = new RGB();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int green;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int blue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator ==(RGB item1, RGB item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.Red == item2.Red&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.Green == item2.Green&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.Blue == item2.Blue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator !=(RGB item1, RGB item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.Red != item2.Red&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.Green != item2.Green&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.Blue != item2.Blue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets red value.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public int Red&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                red = (value&amp;gt;255)? 255 : ((value&amp;lt;0)?0 : value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets red value.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public int Green&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return green;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            green = (value&amp;gt;255)? 255 : ((value&amp;lt;0)?0 : value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets red value.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public int Blue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return blue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            blue = (value&amp;gt;255)? 255 : ((value&amp;lt;0)?0 : value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public RGB(int R, int G, int B)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.red = (R&amp;gt;255)? 255 : ((R&amp;lt;0)?0 : R);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.green = (G&amp;gt;255)? 255 : ((G&amp;lt;0)?0 : G);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.blue = (B&amp;gt;255)? 255 : ((B&amp;lt;0)?0 : B);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override bool Equals(Object obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(obj==null || GetType()!=obj.GetType()) return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (this == (RGB)obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override int GetHashCode()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return Red.GetHashCode() ^ Green.GetHashCode() ^ Blue.GetHashCode();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;HSB-color-space&quot;&gt;&lt;a href=&quot;#HSB-color-space&quot; class=&quot;headerlink&quot; title=&quot;HSB color space&quot;&gt;&lt;/a&gt;HSB color space&lt;/h4&gt;&lt;p&gt;&lt;a name=&quot;hsb&quot; id=&quot;hsb&quot;&gt;&lt;/a&gt;The &lt;strong&gt;HSB&lt;/strong&gt; (&lt;strong&gt;H&lt;/strong&gt;ue, &lt;strong&gt;S&lt;/strong&gt;aturation, &lt;strong&gt;B&lt;/strong&gt;rightness) color model defines a color space in terms of three constituent components: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;H&lt;/strong&gt;ue : the color type (such as red, blue, or yellow).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ranges from 0 to 360° in most applications. (each value corresponds to one color : 0 is red, 45 is a shade of orange and 55 is a shade of yellow). &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;S&lt;/strong&gt;aturation : the intensity of the color.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ranges from 0 to 100% (0 means no color, that is a shade of grey between black and white; 100 means intense color). &lt;/li&gt;
&lt;li&gt;Also sometimes called the “purity” by analogy to the &lt;strong&gt;colorimetric&lt;/strong&gt; quantities excitation purity. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;rightness (or &lt;strong&gt;V&lt;/strong&gt;alue) : the brightness of the color.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ranges from 0 to 100% (0 is always black; depending on the saturation, 100 may be white or a more or less saturated color). &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Its common graphic representation is the following image:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/color/hsv.png&quot; alt=&quot;HSB Cone&quot;&gt; &lt;/p&gt;
&lt;p&gt; The &lt;strong&gt;HSB&lt;/strong&gt; model is also known as &lt;strong&gt;HSV&lt;/strong&gt; (&lt;strong&gt;H&lt;/strong&gt;ue, &lt;strong&gt;S&lt;/strong&gt;aturation, &lt;strong&gt;V&lt;/strong&gt;alue) model. The &lt;strong&gt;HSV&lt;/strong&gt; model was created in 1978 by &lt;a href=&quot;http://en.wikipedia.org/wiki/Alvy_Ray_Smith&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Alvy Ray Smith&lt;/a&gt;. It is a nonlinear transformation of the RGB color space. In other words, color is not defined as a simple combination (addition/substraction) of primary colors but as a mathematical transformation. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;u&gt;Note:&lt;/u&gt;&lt;/strong&gt; &lt;strong&gt;HSV&lt;/strong&gt; and &lt;strong&gt;HSB&lt;/strong&gt; are the same, but &lt;strong&gt;HSL&lt;/strong&gt; is different.&lt;/p&gt;
&lt;p&gt;All this said, a HSB structure can be :&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Structure to define HSB.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public struct HSB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets an empty HSB structure;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static readonly HSB Empty = new HSB();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double hue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double saturation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double brightness;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator ==(HSB item1, HSB item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.Hue == item2.Hue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.Saturation == item2.Saturation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.Brightness == item2.Brightness&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator !=(HSB item1, HSB item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.Hue != item2.Hue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.Saturation != item2.Saturation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.Brightness != item2.Brightness&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets the hue component.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double Hue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return hue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            hue = (value&amp;gt;360)? 360 : ((value&amp;lt;0)?0:value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets saturation component.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double Saturation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return saturation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            saturation = (value&amp;gt;1)? 1 : ((value&amp;lt;0)?0:value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets the brightness component.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double Brightness&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return brightness;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            brightness = (value&amp;gt;1)? 1 : ((value&amp;lt;0)? 0 : value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Creates an instance of a HSB structure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;param name=&amp;quot;h&amp;quot;&amp;gt;Hue value.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;param name=&amp;quot;s&amp;quot;&amp;gt;Saturation value.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;param name=&amp;quot;b&amp;quot;&amp;gt;Brightness value.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public HSB(double h, double s, double b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        hue = (h&amp;gt;360)? 360 : ((h&amp;lt;0)?0:h);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        saturation = (s&amp;gt;1)? 1 : ((s&amp;lt;0)?0:s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        brightness = (b&amp;gt;1)? 1 : ((b&amp;lt;0)?0:b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override bool Equals(Object obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(obj==null || GetType()!=obj.GetType()) return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (this == (HSB)obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override int GetHashCode()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return Hue.GetHashCode() ^ Saturation.GetHashCode() ^&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Brightness.GetHashCode();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;HSL-color-space&quot;&gt;&lt;a href=&quot;#HSL-color-space&quot; class=&quot;headerlink&quot; title=&quot;HSL color space&quot;&gt;&lt;/a&gt;HSL color space&lt;/h4&gt;&lt;p&gt;&lt;a name=&quot;hsl&quot; id=&quot;hsl&quot;&gt;&lt;/a&gt; The &lt;strong&gt;HSL&lt;/strong&gt; color space, also called &lt;strong&gt;HLS&lt;/strong&gt; or &lt;strong&gt;HSI&lt;/strong&gt;, stands for: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;H&lt;/strong&gt;ue : the color type (such as red, blue, or yellow). &lt;ul&gt;
&lt;li&gt;Ranges from 0 to 360° in most applications (each value corresponds to one color : 0 is red, 45 is a shade of orange and 55 is a shade of yellow). &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;S&lt;/strong&gt;aturation : variation of the color depending on the lightness. &lt;ul&gt;
&lt;li&gt;Ranges from 0 to 100% (from the center of the black&amp;amp;white axis). &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;L&lt;/strong&gt;ightness (also Luminance or Luminosity or Intensity). &lt;ul&gt;
&lt;li&gt;Ranges from 0 to 100% (from black to white). Its common graphic representation is the following image:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/color/hsl.png&quot; alt=&quot;The HSL cone; Wikipedia image.&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HSL&lt;/strong&gt; is similar to &lt;strong&gt;HSB&lt;/strong&gt;. The main difference is that &lt;strong&gt;HSL&lt;/strong&gt; is symmetrical to lightness and darkness. This means that: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;strong&gt;HSL&lt;/strong&gt;, the Saturation component always goes from fully saturated color to the equivalent gray (in &lt;strong&gt;HSB&lt;/strong&gt;, with B at maximum, it goes from saturated color to white). &lt;/li&gt;
&lt;li&gt;&lt;p&gt;In &lt;strong&gt;HSL&lt;/strong&gt;, the Lightness always spans the entire range from black through the chosen hue to white (in &lt;strong&gt;HSB&lt;/strong&gt;, the B component only goes half that way, from black to the chosen hue).&lt;/p&gt;
&lt;p&gt;For my part, &lt;strong&gt;HSL&lt;/strong&gt; offers a more accurate (even if it’s not absolute) color approximation than &lt;strong&gt;HSB&lt;/strong&gt;. All this said, a &lt;strong&gt;HSL&lt;/strong&gt; structure can be:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Structure to define HSL.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public struct HSL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets an empty HSL structure;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static readonly HSL Empty = new HSL();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double hue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double saturation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double luminance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator ==(HSL item1, HSL item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.Hue == item2.Hue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.Saturation == item2.Saturation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.Luminance == item2.Luminance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator !=(HSL item1, HSL item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.Hue != item2.Hue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.Saturation != item2.Saturation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.Luminance != item2.Luminance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets the hue component.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double Hue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return hue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            hue = (value&amp;gt;360)? 360 : ((value&amp;lt;0)?0:value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets saturation component.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double Saturation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return saturation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            saturation = (value&amp;gt;1)? 1 : ((value&amp;lt;0)?0:value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets the luminance component.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double Luminance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return luminance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            luminance = (value&amp;gt;1)? 1 : ((value&amp;lt;0)? 0 : value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Creates an instance of a HSL structure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;param name=&amp;quot;h&amp;quot;&amp;gt;Hue value.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;param name=&amp;quot;s&amp;quot;&amp;gt;Saturation value.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;param name=&amp;quot;l&amp;quot;&amp;gt;Lightness value.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public HSL(double h, double s, double l)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.hue = (h&amp;gt;360)? 360 : ((h&amp;lt;0)?0:h);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.saturation = (s&amp;gt;1)? 1 : ((s&amp;lt;0)?0:s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.luminance = (l&amp;gt;1)? 1 : ((l&amp;lt;0)?0:l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override bool Equals(Object obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(obj==null || GetType()!=obj.GetType()) return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (this == (HSL)obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override int GetHashCode()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return Hue.GetHashCode() ^ Saturation.GetHashCode() ^&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Luminance.GetHashCode();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;CMYK-color-space&quot;&gt;&lt;a href=&quot;#CMYK-color-space&quot; class=&quot;headerlink&quot; title=&quot;CMYK color space&quot;&gt;&lt;/a&gt;CMYK color space&lt;/h4&gt;&lt;p&gt;&lt;a name=&quot;cmyk&quot; id=&quot;“cmyk”&quot;&gt;&lt;/a&gt;The &lt;strong&gt;CMYK&lt;/strong&gt; color space, also known as &lt;strong&gt;CMJN&lt;/strong&gt;, stands for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C&lt;/strong&gt;yan.&lt;ul&gt;
&lt;li&gt;Ranges from 0 to 100% in most applications. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;M&lt;/strong&gt;agenta. &lt;ul&gt;
&lt;li&gt;Ranges from 0 to 100% in most applications. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Y&lt;/strong&gt;ellow. &lt;ul&gt;
&lt;li&gt;Ranges from 0 to 100% in most applications. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;blac&lt;strong&gt;K&lt;/strong&gt;. &lt;ul&gt;
&lt;li&gt;Ranges from 0 to 100% in most applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is a subtractive color model used in color printing.&lt;strong&gt;CMYK&lt;/strong&gt; works on an optical illusion that is based on light absorption.&lt;/p&gt;
&lt;p&gt;The principle is to superimpose three images; one for cyan, one for magenta and one for yellow; which will reproduce colors. Its common graphic representation is the following image:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/color/cmyk.png&quot; alt=&quot;CMYK&quot;&gt;&lt;/p&gt;
&lt;p&gt;Like the &lt;strong&gt;RGB&lt;/strong&gt; color model, &lt;strong&gt;CMYK&lt;/strong&gt; is a combination of primary colors (cyan, magenta, yellow and black). It is, probably, the only thing they have in common.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CMYK&lt;/strong&gt; suffers from a lack of color shades that causes holes in the color spectrum it can reproduce. That’s why there are often differencies when someone convert a color between &lt;strong&gt;CMYK&lt;/strong&gt; to &lt;strong&gt;RGB&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Why using this model? Why black is used? you can tell me… Well it’s only for practical purpose. Wikipedia said: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To improve print quality and reduce moiré patterns, &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Text is typically printed in black and includes fine detail (such as serifs); so to reproduce text - using three inks would require an extremely precise alignment for each three components image.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A combination of cyan, magenta, and yellow pigments don’t produce (or rarely) pure black.&lt;br&gt;Mixing all three color inks together to make black can make the paper rather wet when not using dry toner, which is an issue in high speed printing where the paper must dry extremely rapidly to avoid marking the next sheet, and poor quality paper such as newsprint may break if it becomes too wet.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using a unit amount of black ink rather than three unit amounts of the process color inks can lead to significant cost savings (black ink is often cheaper).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s come back to our reality. A &lt;strong&gt;CMYK&lt;/strong&gt; structure can be:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Structure to define CMYK.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public struct CMYK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets an empty CMYK structure;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public readonly static CMYK Empty = new CMYK();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator ==(CMYK item1, CMYK item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.Cyan == item2.Cyan&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.Magenta == item2.Magenta&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.Yellow == item2.Yellow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.Black == item2.Black&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator !=(CMYK item1, CMYK item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.Cyan != item2.Cyan&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.Magenta != item2.Magenta&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.Yellow != item2.Yellow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.Black != item2.Black&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double Cyan&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            c = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            c = (c&amp;gt;1)? 1 : ((c&amp;lt;0)? 0 : c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double Magenta&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            m = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            m = (m&amp;gt;1)? 1 : ((m&amp;lt;0)? 0 : m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double Yellow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            y = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            y = (y&amp;gt;1)? 1 : ((y&amp;lt;0)? 0 : y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double Black&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            k = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            k = (k&amp;gt;1)? 1 : ((k&amp;lt;0)? 0 : k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Creates an instance of a CMYK structure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public CMYK(double c, double m, double y, double k)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.c = c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.m = m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.y = y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.k = k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override bool Equals(Object obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(obj==null || GetType()!=obj.GetType()) return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (this == (CMYK)obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override int GetHashCode()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return Cyan.GetHashCode() ^&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Magenta.GetHashCode() ^ Yellow.GetHashCode() ^ Black.GetHashCode();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;YUV-color-space&quot;&gt;&lt;a href=&quot;#YUV-color-space&quot; class=&quot;headerlink&quot; title=&quot;YUV color space&quot;&gt;&lt;/a&gt;YUV color space&lt;/h4&gt;&lt;p&gt;&lt;a name=&quot;yuv&quot; id=&quot;yuv&quot;&gt;&lt;/a&gt;The &lt;strong&gt;YUV&lt;/strong&gt; model defines a color space in terms of one luma and two chrominance components. The &lt;strong&gt;YUV&lt;/strong&gt; color model is used in the PAL, NTSC, and SECAM composite color video standards.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;YUV&lt;/strong&gt; models human perception of color more closely than the standard RGB model used in computer graphics hardware.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;YUV&lt;/strong&gt; color space stands for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Y&lt;/strong&gt;, the luma component, or the brightness. &lt;ul&gt;
&lt;li&gt;Ranges from 0 to 100% in most applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;U&lt;/strong&gt; and &lt;strong&gt;V&lt;/strong&gt; are the chrominance components (blue-luminance and red-luminance differences components).&lt;ul&gt;
&lt;li&gt;Expressed as factors depending on the &lt;strong&gt;YUV&lt;/strong&gt; version you want to use.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A graphic representation is the following image:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/color/yuv.png&quot; alt=&quot;U-V color plane, Y value = 0.5; Wikipedia image&quot;&gt;&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;YUV&lt;/strong&gt; structure can be:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Structure to define YUV.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public struct YUV&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets an empty YUV structure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static readonly YUV Empty = new YUV();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double u;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double v;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator ==(YUV item1, YUV item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.Y == item2.Y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.U == item2.U&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.V == item2.V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator !=(YUV item1, YUV item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.Y != item2.Y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.U != item2.U&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.V != item2.V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double Y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            y = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            y = (y&amp;gt;1)? 1 : ((y&amp;lt;0)? 0 : y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double U&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return u;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            u = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            u = (u&amp;gt;0.436)? 0.436 : ((u&amp;lt;-0.436)? -0.436 : u);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return v;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            v = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            v = (v&amp;gt;0.615)? 0.615 : ((v&amp;lt;-0.615)? -0.615 : v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Creates an instance of a YUV structure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public YUV(double y, double u, double v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.y = (y&amp;gt;1)? 1 : ((y&amp;lt;0)? 0 : y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.u = (u&amp;gt;0.436)? 0.436 : ((u&amp;lt;-0.436)? -0.436 : u);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.v = (v&amp;gt;0.615)? 0.615 : ((v&amp;lt;-0.615)? -0.615 : v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override bool Equals(Object obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(obj==null || GetType()!=obj.GetType()) return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (this == (YUV)obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override int GetHashCode()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return Y.GetHashCode() ^ U.GetHashCode() ^ V.GetHashCode();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;CIE-XYZ-color-space&quot;&gt;&lt;a href=&quot;#CIE-XYZ-color-space&quot; class=&quot;headerlink&quot; title=&quot;CIE XYZ color space&quot;&gt;&lt;/a&gt;CIE XYZ color space&lt;/h4&gt;&lt;p&gt;&lt;a name=&quot;xyz&quot; id=&quot;xyz&quot;&gt;&lt;/a&gt;In opposition to the previous models, the &lt;strong&gt;CIE XYZ&lt;/strong&gt; model defines an absolute color space. It is also known as the &lt;strong&gt;CIE 1931 XYZ&lt;/strong&gt; color space and stands for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;X&lt;/strong&gt;, which can be compared to red&lt;ul&gt;
&lt;li&gt;Ranges from 0 to 0.9505&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Y&lt;/strong&gt;, which can be compared to green&lt;ul&gt;
&lt;li&gt;Ranges from 0 to 1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Z&lt;/strong&gt;, which can be compared to blue&lt;ul&gt;
&lt;li&gt;Ranges from 0 to 1.089&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before trying to explain why I include this color space in this article, you have to know that it’s one of the first standards created by the International Commission on Illumination (CIE) in 1931. It is based on direct measurements of the human eye, and serves as the basis from which many other color spaces are defined.&lt;/p&gt;
&lt;p&gt;A graphic representation is the following image:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/color/xyz.png&quot; alt=&quot;CIE XYZ Color Space&quot;&gt;&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;CIE XYZ&lt;/strong&gt; structure can be:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Structure to define CIE XYZ.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public struct CIEXYZ&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets an empty CIEXYZ structure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static readonly CIEXYZ Empty = new CIEXYZ();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets the CIE D65 (white) structure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static readonly CIEXYZ D65 = new CIEXYZ(0.9505, 1.0, 1.0890);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double z;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator ==(CIEXYZ item1, CIEXYZ item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.X == item2.X&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.Y == item2.Y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.Z == item2.Z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator !=(CIEXYZ item1, CIEXYZ item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.X != item2.X&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.Y != item2.Y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.Z != item2.Z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets X component.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double X&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return this.x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            this.x = (value&amp;gt;0.9505)? 0.9505 : ((value&amp;lt;0)? 0 : value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets Y component.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double Y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return this.y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            this.y = (value&amp;gt;1.0)? 1.0 : ((value&amp;lt;0)?0 : value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets Z component.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double Z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return this.z;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            this.z = (value&amp;gt;1.089)? 1.089 : ((value&amp;lt;0)? 0 : value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public CIEXYZ(double x, double y, double z)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.x = (x&amp;gt;0.9505)? 0.9505 : ((x&amp;lt;0)? 0 : x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.y = (y&amp;gt;1.0)? 1.0 : ((y&amp;lt;0)? 0 : y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.z = (z&amp;gt;1.089)? 1.089 : ((z&amp;lt;0)? 0 : z);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override bool Equals(Object obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(obj==null || GetType()!=obj.GetType()) return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (this == (CIEXYZ)obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override int GetHashCode()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return X.GetHashCode() ^ Y.GetHashCode() ^ Z.GetHashCode();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Well! why do I have to include this model?&lt;/p&gt;
&lt;p&gt;I have made a quick research to include &lt;strong&gt;Cie L*a&lt;em&gt;b&lt;/em&gt;&lt;/strong&gt; color model in this article, and I find that a conversion to an absolute color space is required before converting to &lt;strong&gt;L*a&lt;em&gt;b&lt;/em&gt;&lt;/strong&gt;. The model used in the conversion principle is &lt;strong&gt;Cie XYZ&lt;/strong&gt;. So, I’ve included it and now everyone can understand “what are those XYZ values” used further in the article.&lt;/p&gt;
&lt;h4 id=&quot;CIE-L-a-b-color-space&quot;&gt;&lt;a href=&quot;#CIE-L-a-b-color-space&quot; class=&quot;headerlink&quot; title=&quot;CIE L*a*b* color space&quot;&gt;&lt;/a&gt;CIE L*a*b* color space&lt;/h4&gt;&lt;p&gt;&lt;a name=&quot;lab&quot; id=&quot;lab&quot;&gt;&lt;/a&gt;A Lab color space is a color-opponent space with dimension L for luminance and a and b for the color-opponent dimensions, based on nonlinearly-compressed &lt;strong&gt;CIE XYZ&lt;/strong&gt; color space coordinates.”&lt;/p&gt;
&lt;p&gt;As said in the previous definition, &lt;strong&gt;CIE L*a*b*&lt;/strong&gt; color space, also know as &lt;strong&gt;CIE 1976&lt;/strong&gt; color space, stands for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;L*&lt;/strong&gt;, the luminance &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;a*&lt;/strong&gt;, the red/green color-opponent dimension &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;b*&lt;/strong&gt; , the yellow/blue color-opponent dimension &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;strong&gt;L*a*b*&lt;/strong&gt; color model has been created to serve as a device independent model to be used as a reference. It is based directly on the &lt;strong&gt;CIE 1931 XYZ&lt;/strong&gt; color space as an attempt to linearize the perceptibility of color differences.&lt;/p&gt;
&lt;p&gt;The non-linear relations for L*, a*, and b* are intended to mimic the logarithmic response of the eye, coloring information is referred to the color of the white point of the system.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;CIE L*a*b*&lt;/strong&gt; structure can be:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Structure to define CIE L*a*b*.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public struct CIELab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets an empty CIELab structure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static readonly CIELab Empty = new CIELab();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator ==(CIELab item1, CIELab item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.L == item2.L&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.A == item2.A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; item1.B == item2.B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static bool operator !=(CIELab item1, CIELab item2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item1.L != item2.L&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.A != item2.A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || item1.B != item2.B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets L component.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double L&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return this.l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            this.l = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets a component.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return this.a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            this.a = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Gets or sets a component.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public double B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return this.b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            this.b = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public CIELab(double l, double a, double b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.l = l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.a = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.b = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override bool Equals(Object obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(obj==null || GetType()!=obj.GetType()) return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (this == (CIELab)obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public override int GetHashCode()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return L.GetHashCode() ^ a.GetHashCode() ^ b.GetHashCode();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;There are still many other formats like &lt;a href=&quot;http://en.wikipedia.org/wiki/RYB_color_model&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RYB&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/CcMmYK_color_model&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CcMmYK&lt;/a&gt;. I still don’t intend to create a “color framework”(so do I), but if you have other ideas… &lt;/p&gt;
&lt;h3 id=&quot;Conversion-between-models&quot;&gt;&lt;a href=&quot;#Conversion-between-models&quot; class=&quot;headerlink&quot; title=&quot;Conversion between models&quot;&gt;&lt;/a&gt;Conversion between models&lt;/h3&gt;&lt;p&gt;&lt;a name=&quot;cbm&quot; id=&quot;cbm&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;A-RGB-Conversions&quot;&gt;&lt;a href=&quot;#A-RGB-Conversions&quot; class=&quot;headerlink&quot; title=&quot;A - RGB Conversions&quot;&gt;&lt;/a&gt;A - RGB Conversions&lt;/h4&gt;&lt;p&gt;&lt;a name=&quot;rgb2&quot; id=&quot;rgb2&quot;&gt;&lt;/a&gt;&lt;br&gt;Converting &lt;strong&gt;RGB color&lt;/strong&gt; to any other model is the basis in conversion algorithms. It implies a normalisation of red, green and blue : value ranges now from [0..255] to [0..1].&lt;/p&gt;
&lt;h5 id=&quot;a-RGB-to-HSB&quot;&gt;&lt;a href=&quot;#a-RGB-to-HSB&quot; class=&quot;headerlink&quot; title=&quot;a - RGB to HSB&quot;&gt;&lt;/a&gt;a - RGB to HSB&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;rgb2hsb&quot; id=&quot;rgb2hsb&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The conversion principle is the one below:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;H&lt;/em&gt; ? [0, 360]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;S, V, R, G, B&lt;/em&gt; ? [0, 1]&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/color/rgb2-1.png&quot; alt=&quot;RGB to HSB&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/color/rgb2-2.png&quot; alt=&quot;RGB to HSB&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;V&lt;/em&gt; = &lt;em&gt;MAX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Well! Interesting! But what’s the C# equivalent? Here it is.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts RGB to HSB.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static HSB RGBtoHSB(int red, int green, int blue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // normalize red, green and blue values&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double r = ((double)red/255.0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double g = ((double)green/255.0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double b = ((double)blue/255.0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // conversion start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double max = Math.Max(r, Math.Max(g, b));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double min = Math.Min(r, Math.Min(g, b));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double h = 0.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(max==r &amp;amp;&amp;amp; g&amp;gt;=b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        h = 60 * (g-b)/(max-min);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else if(max==r &amp;amp;&amp;amp; g &amp;lt; b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        h = 60 * (g-b)/(max-min) + 360;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else if(max == g)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        h = 60 * (b-r)/(max-min) + 120;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else if(max == b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        h = 60 * (r-g)/(max-min) + 240;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double s = (max == 0)? 0.0 : (1.0 - (min/max));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return new HSB(h, s, (double)max);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;b-RGB-to-HSL&quot;&gt;&lt;a href=&quot;#b-RGB-to-HSL&quot; class=&quot;headerlink&quot; title=&quot;b - RGB to HSL&quot;&gt;&lt;/a&gt;b - RGB to HSL&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;rgb2hsl&quot; id=&quot;rgb2hsl&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The conversion principle is the one below:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;H&lt;/em&gt; ? [0, 360]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;S, L, R, G, B&lt;/em&gt; ? [0, 1]&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/color/rgb2-3.png&quot; alt=&quot;RGB to HSL&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/color/rgb2-4.png&quot; alt=&quot;RGB to HSL&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;L&lt;/em&gt; = 1/2*(&lt;em&gt;MAX&lt;/em&gt; + &lt;em&gt;MIN&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;The C# equivalent is:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts RGB to HSL.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;red&amp;quot;&amp;gt;Red value, must be in [0,255].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;green&amp;quot;&amp;gt;Green value, must be in [0,255].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;blue&amp;quot;&amp;gt;Blue value, must be in [0,255].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static HSL RGBtoHSL(int red, int green, int blue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double h=0, s=0, l=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // normalize red, green, blue values&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double r = (double)red/255.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double g = (double)green/255.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double b = (double)blue/255.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double max = Math.Max(r, Math.Max(g, b));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double min = Math.Min(r, Math.Min(g, b));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // hue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(max == min)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        h = 0; // undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else if(max==r &amp;amp;&amp;amp; g&amp;gt;=b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        h = 60.0*(g-b)/(max-min);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else if(max==r &amp;amp;&amp;amp; g&amp;lt;b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        h = 60.0*(g-b)/(max-min) + 360.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else if(max==g)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        h = 60.0*(b-r)/(max-min) + 120.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else if(max==b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        h = 60.0*(r-g)/(max-min) + 240.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // luminance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    l = (max+min)/2.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // saturation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(l == 0 || max == min)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else if(0&amp;lt;l &amp;amp;&amp;amp; l&amp;lt;=0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s = (max-min)/(max+min);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else if(l&amp;gt;0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s = (max-min)/(2 - (max+min)); //(max-min &amp;gt; 0)?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return new HSL(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.##&amp;#125;&amp;quot;, h)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.##&amp;#125;&amp;quot;, s)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.##&amp;#125;&amp;quot;, l))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Note: You have probably noticed String.Format in the final line. It’s the .NET solution for keeping the same rounding behavior. If you don’t understand what I mean, try the sample code below: &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Console.WriteLine(Math.Round(4.45, 1)); // returns 4.4.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Console.WriteLine(Math.Round(4.55, 1)); // returns 4.6.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;You didn’t notice a problem? Ok, rouding 4.45 should have returned 4.5 and not 4.4. The solution is using &lt;code&gt;String.Format()&lt;/code&gt; which always applies “round-to-even” method. &lt;/p&gt;
&lt;h5 id=&quot;c-RGB-to-CMYK&quot;&gt;&lt;a href=&quot;#c-RGB-to-CMYK&quot; class=&quot;headerlink&quot; title=&quot;c - RGB to CMYK&quot;&gt;&lt;/a&gt;c - RGB to CMYK&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;rgb2cmyk&quot; id=&quot;rgb2cmyk&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The conversion principle is the one below :&lt;/p&gt;
&lt;p&gt;&lt;em&gt;R, G, B&lt;/em&gt; ? [0, 1]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;t**C’M’Y’&lt;/em&gt; = {1 - &lt;em&gt;R&lt;/em&gt;, 1 - &lt;em&gt;G&lt;/em&gt;, 1 - &lt;em&gt;B&lt;/em&gt;}&lt;/p&gt;
&lt;p&gt;&lt;em&gt;K&lt;/em&gt; = min{&lt;em&gt;C’, M’, Y’&lt;/em&gt;}&lt;/p&gt;
&lt;p&gt;&lt;em&gt;t**CMYK&lt;/em&gt; = {0, 0, 0, 1}&lt;/p&gt;
&lt;p&gt; &lt;em&gt;if K = 1&lt;strong&gt;t&lt;/strong&gt;CMYK&lt;/em&gt; = { (&lt;em&gt;C’ - K&lt;/em&gt;)/(1 - &lt;em&gt;K&lt;/em&gt;), (&lt;em&gt;M’ - K&lt;/em&gt;)/(1 - &lt;em&gt;K&lt;/em&gt;), (&lt;em&gt;Y’ - K&lt;/em&gt;)/(1 - &lt;em&gt;K&lt;/em&gt;), &lt;em&gt;K&lt;/em&gt; } &lt;em&gt;otherwise&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The C# equivalent is:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts RGB to CMYK.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;red&amp;quot;&amp;gt;Red vaue must be in [0, 255]. &amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;green&amp;quot;&amp;gt;Green vaue must be in [0, 255].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;blue&amp;quot;&amp;gt;Blue vaue must be in [0, 255].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static CMYK RGBtoCMYK(int red, int green, int blue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // normalizes red, green, blue values&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double c = (double)(255 - red)/255;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double m = (double)(255 - green)/255;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double y = (double)(255 - blue)/255;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double k = (double)Math.Min(c, Math.Min(m, y));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(k == 1.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return new CMYK(0,0,0,1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return new CMYK((c-k)/(1-k), (m-k)/(1-k), (y-k)/(1-k), k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;d-RGB-to-YUV-YUV444&quot;&gt;&lt;a href=&quot;#d-RGB-to-YUV-YUV444&quot; class=&quot;headerlink&quot; title=&quot;d - RGB to YUV (YUV444)&quot;&gt;&lt;/a&gt;d - RGB to YUV (YUV444)&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;rgb2yuv&quot; id=&quot;rgb2yuv&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The conversion principle is the one below :&lt;/p&gt;
&lt;p&gt;&lt;em&gt;R, G, B, Y&lt;/em&gt; ? [0, 1]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;U&lt;/em&gt; ? [-0.436, 0.436]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;V&lt;/em&gt; ? [-0.615, 0.615]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;tYUV&lt;/em&gt; = { (0.299 &lt;em&gt;R&lt;/em&gt; + 0.587 &lt;em&gt;G&lt;/em&gt; + 0.114 &lt;em&gt;B&lt;/em&gt;), (- 0.14713 &lt;em&gt;R&lt;/em&gt; + 0.28886 &lt;em&gt;G&lt;/em&gt; + 0.436 &lt;em&gt;B&lt;/em&gt;), (0.615 &lt;em&gt;R&lt;/em&gt; + 0.51499 &lt;em&gt;G&lt;/em&gt; + 0.10001 &lt;em&gt;B&lt;/em&gt;) }&lt;/p&gt;
&lt;p&gt;The C# equivalent is :&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts RGB to YUV.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;red&amp;quot;&amp;gt;Red must be in [0, 255].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;green&amp;quot;&amp;gt;Green must be in [0, 255].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;blue&amp;quot;&amp;gt;Blue must be in [0, 255].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static YUV RGBtoYUV(int red, int green, int blue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    YUV yuv = new YUV();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // normalizes red, green, blue values&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double r = (double)red/255.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double g = (double)green/255.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double b = (double)blue/255.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    yuv.Y = 0.299*r + 0.587*g + 0.114*b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    yuv.U = -0.14713*r -0.28886*g + 0.436*b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    yuv.V = 0.615*r -0.51499*g -0.10001*b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return yuv;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;e-RGB-to-web-color&quot;&gt;&lt;a href=&quot;#e-RGB-to-web-color&quot; class=&quot;headerlink&quot; title=&quot;e - RGB to web color&quot;&gt;&lt;/a&gt;e - RGB to web color&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;rgb2wc&quot; id=&quot;rgb2wc&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Haaa! Something I can explain.&lt;/p&gt;
&lt;p&gt;As you probably already know, web colors can be defined in two ways: for example, “red” can be defined as &lt;code&gt;rgb(255,0,0)&lt;/code&gt; or &lt;code&gt;#FF0000&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The explanation of the second form is simple : &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“&lt;code&gt;#&lt;/code&gt;“ character tells that the format is the hexadecimal one. &lt;/li&gt;
&lt;li&gt;The last 6 characters define 3 pairs: one for “Red”, one for “Green” and one for “Blue”. &lt;/li&gt;
&lt;li&gt;Each pair is a hexadecimal value (base 16) of a value which ranges from 0 to 255. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, you can divide each color component by 16 and replace numbers superior to 9 by theirs hexadecimal value (eg. 10 = A, 11 = B, etc.)… but the best way is to use &lt;code&gt;String.Format()&lt;/code&gt; habilities. &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts a RGB color format to an hexadecimal color.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;r&amp;quot;&amp;gt;Red value.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;g&amp;quot;&amp;gt;Green value.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;b&amp;quot;&amp;gt;Blue value.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static string RGBToHex(int r, int g, int b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return String.Format(&amp;quot;#&amp;#123;0:x2&amp;#125;&amp;#123;1:x2&amp;#125;&amp;#123;2:x2&amp;#125;&amp;quot;, r, g, b).ToUpper();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;f-RGB-to-XYZ&quot;&gt;&lt;a href=&quot;#f-RGB-to-XYZ&quot; class=&quot;headerlink&quot; title=&quot;f - RGB to XYZ&quot;&gt;&lt;/a&gt;f - RGB to XYZ&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;rgb2xyz&quot; id=&quot;rgb2xyz&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The conversion principle is the one below:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;R, G, B&lt;/em&gt; ? [0, 1]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;a&lt;/em&gt; = 0.055 and &lt;em&gt;?&lt;/em&gt; ˜ 2.2&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/color/rgb2-5.png&quot; alt=&quot;RGB to XYZ&quot;&gt; &lt;/p&gt;
&lt;p&gt;where&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/color/rgb2-6.png&quot; alt=&quot;RGB to XYZ&quot;&gt; &lt;/p&gt;
&lt;p&gt;The C# equivalent is :&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts RGB to CIE XYZ (CIE 1931 color space)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static CIEXYZ RGBtoXYZ(int red, int green, int blue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // normalize red, green, blue values&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double rLinear = (double)red/255.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double gLinear = (double)green/255.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double bLinear = (double)blue/255.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // convert to a sRGB form&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double r = (rLinear &amp;gt; 0.04045)? Math.Pow((rLinear + 0.055)/(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        1 + 0.055), 2.2) : (rLinear/12.92) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double g = (gLinear &amp;gt; 0.04045)? Math.Pow((gLinear + 0.055)/(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        1 + 0.055), 2.2) : (gLinear/12.92) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double b = (bLinear &amp;gt; 0.04045)? Math.Pow((bLinear + 0.055)/(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        1 + 0.055), 2.2) : (bLinear/12.92) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // converts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return new CIEXYZ(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (r*0.4124 + g*0.3576 + b*0.1805),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (r*0.2126 + g*0.7152 + b*0.0722),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (r*0.0193 + g*0.1192 + b*0.9505)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;g-RGB-to-L-a-b&quot;&gt;&lt;a href=&quot;#g-RGB-to-L-a-b&quot; class=&quot;headerlink&quot; title=&quot;g - RGB to L*a*b*&quot;&gt;&lt;/a&gt;g - RGB to L*a*b*&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;rgb2lab&quot; id=&quot;rgb2lab&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As I said before, converting to the &lt;strong&gt;CIE L*a*b*&lt;/strong&gt; color model is a little bit tricky: we need to convert to &lt;strong&gt;CIE XYZ&lt;/strong&gt; before trying to have &lt;strong&gt;L*a*b*&lt;/strong&gt; values.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts RGB to CIELab.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static CIELab RGBtoLab(int red, int green, int blue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return XYZtoLab( RGBtoXYZ(red, green, blue) );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The conversion between &lt;strong&gt;XYZ&lt;/strong&gt; and &lt;strong&gt;L*a*b*&lt;/strong&gt; is given below.&lt;/p&gt;
&lt;h4 id=&quot;B-HSB-conversions&quot;&gt;&lt;a href=&quot;#B-HSB-conversions&quot; class=&quot;headerlink&quot; title=&quot;B - HSB conversions&quot;&gt;&lt;/a&gt;B - HSB conversions&lt;/h4&gt;&lt;p&gt;&lt;a name=&quot;hsb2&quot; id=&quot;hsb2&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;a-HSB-to-RGB&quot;&gt;&lt;a href=&quot;#a-HSB-to-RGB&quot; class=&quot;headerlink&quot; title=&quot;a - HSB to RGB&quot;&gt;&lt;/a&gt;a - HSB to RGB&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;hsb2rgb&quot; id=&quot;hsb2rgb&quot;&gt;&lt;/a&gt;&lt;br&gt;The conversion principle is the one below :&lt;/p&gt;
&lt;p&gt;&lt;em&gt;H&lt;/em&gt; ? [0, 360]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;S, V, R, G, B&lt;/em&gt; ? [0, 1]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Hi&lt;/em&gt; = [&lt;em&gt;H&lt;/em&gt; / 60] mod 6&lt;/p&gt;
&lt;p&gt;&lt;em&gt;f&lt;/em&gt; = (&lt;em&gt;H&lt;/em&gt; / 60) - &lt;em&gt;Hi&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;p&lt;/em&gt; = &lt;em&gt;V&lt;/em&gt; (1 - &lt;em&gt;S&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;q&lt;/em&gt; = &lt;em&gt;V&lt;/em&gt; (1 - &lt;em&gt;f S&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;t&lt;/em&gt; = &lt;em&gt;V&lt;/em&gt; (1 - (1 - &lt;em&gt;f&lt;/em&gt; ) &lt;em&gt;S&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;if Hi&lt;/em&gt; = 0 ? &lt;em&gt;R&lt;/em&gt; = &lt;em&gt;V&lt;/em&gt;, &lt;em&gt;G&lt;/em&gt; = &lt;em&gt;t&lt;/em&gt;, &lt;em&gt;B&lt;/em&gt; = &lt;em&gt;p&lt;/em&gt;&lt;br&gt;&lt;em&gt;if Hi&lt;/em&gt; = 1 ? &lt;em&gt;R&lt;/em&gt; = &lt;em&gt;q&lt;/em&gt;, &lt;em&gt;G&lt;/em&gt; = &lt;em&gt;V&lt;/em&gt;, &lt;em&gt;B&lt;/em&gt; = &lt;em&gt;p&lt;/em&gt;&lt;br&gt;&lt;em&gt;if Hi&lt;/em&gt; = 2 ? &lt;em&gt;R&lt;/em&gt; = &lt;em&gt;p&lt;/em&gt;, &lt;em&gt;G&lt;/em&gt; = &lt;em&gt;V&lt;/em&gt;, &lt;em&gt;B&lt;/em&gt; = &lt;em&gt;t&lt;/em&gt;&lt;br&gt;&lt;em&gt;if Hi&lt;/em&gt; = 3 ? &lt;em&gt;R&lt;/em&gt; = &lt;em&gt;p&lt;/em&gt;, &lt;em&gt;G&lt;/em&gt; = &lt;em&gt;q&lt;/em&gt;, &lt;em&gt;B&lt;/em&gt; = &lt;em&gt;V&lt;/em&gt;&lt;br&gt;&lt;em&gt;if Hi&lt;/em&gt; = 4 ? &lt;em&gt;R&lt;/em&gt; = &lt;em&gt;t&lt;/em&gt;, &lt;em&gt;G&lt;/em&gt; = &lt;em&gt;p&lt;/em&gt;, &lt;em&gt;B&lt;/em&gt; = &lt;em&gt;V&lt;/em&gt;&lt;br&gt;&lt;em&gt;if Hi&lt;/em&gt; = 5 ? &lt;em&gt;R&lt;/em&gt; = &lt;em&gt;V&lt;/em&gt;, &lt;em&gt;G&lt;/em&gt; = &lt;em&gt;p&lt;/em&gt;, &lt;em&gt;B&lt;/em&gt; = &lt;em&gt;q&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;The C# equivalent? Here it is.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts HSB to RGB.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static RGB HSBtoRGB(double h, double s, double b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double r = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double g = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double b = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(s == 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        r = g = b = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // the color wheel consists of 6 sectors. Figure out which sector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // you&amp;apos;re in.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        double sectorPos = h / 60.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int sectorNumber = (int)(Math.Floor(sectorPos));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // get the fractional part of the sector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        double fractionalSector = sectorPos - sectorNumber;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // calculate values for the three axes of the color.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        double p = b * (1.0 - s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        double q = b * (1.0 - (s * fractionalSector));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        double t = b * (1.0 - (s * (1 - fractionalSector)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // assign the fractional colors to r, g, and b based on the sector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // the angle is in.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        switch(sectorNumber)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            case 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                r = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                g = t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                b = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            case 1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                r = q;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                g = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                b = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            case 2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                r = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                g = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                b = t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            case 3:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                r = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                g = q;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                b = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            case 4:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                r = t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                g = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                b = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            case 5:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                r = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                g = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                b = q;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return new RGB(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Convert.ToInt32( Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.00&amp;#125;&amp;quot;, r*255.0)) ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Convert.ToInt32( Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.00&amp;#125;&amp;quot;, g*255.0)) ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Convert.ToInt32( Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.00&amp;#125;&amp;quot;, b*255.0)) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;b-HSB-to-HSL&quot;&gt;&lt;a href=&quot;#b-HSB-to-HSL&quot; class=&quot;headerlink&quot; title=&quot;b - HSB to HSL&quot;&gt;&lt;/a&gt;b - HSB to HSL&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;hsb2hsl&quot; id=&quot;hsb2hsl&quot;&gt;&lt;/a&gt;&lt;br&gt;Nothing new: conversion principle is to convert to &lt;strong&gt;RGB&lt;/strong&gt; and then to &lt;strong&gt;HSB&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts HSL to HSB.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static HSB HSLtoHSB(double h, double s, double l)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RGB rgb = HSLtoRGB(h, s, l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return RGBtoHSB(rgb.Red, rgb.Green, rgb.Blue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;c-HSB-to-CMYK&quot;&gt;&lt;a href=&quot;#c-HSB-to-CMYK&quot; class=&quot;headerlink&quot; title=&quot;c - HSB to CMYK&quot;&gt;&lt;/a&gt;c - HSB to CMYK&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;hsb2cmyk&quot; id=&quot;hsb2cmyk&quot;&gt;&lt;/a&gt;&lt;br&gt;Nothing new: conversion principle is to convert to &lt;strong&gt;RGB&lt;/strong&gt; and then to &lt;strong&gt;CMYK&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts HSB to CMYK.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static CMYK HSBtoCMYK(double h, double s, double b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RGB rgb = HSBtoRGB(h, s, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return RGBtoCMYK(rgb.Red, rgb.Green, rgb.Blue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;d-HSB-to-YUV&quot;&gt;&lt;a href=&quot;#d-HSB-to-YUV&quot; class=&quot;headerlink&quot; title=&quot;d - HSB to YUV&quot;&gt;&lt;/a&gt;d - HSB to YUV&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;hsb2yuv&quot; id=&quot;hsb2yuv&quot;&gt;&lt;/a&gt;&lt;br&gt;Nothing new: conversion principle is to convert to &lt;strong&gt;RGB&lt;/strong&gt; and then to &lt;strong&gt;YUV&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts HSB to CMYK.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static YUV HSBtoYUV(double h, double s, double b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RGB rgb = HSBtoRGB(h, s, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return RGBtoYUV(rgb.Red, rgb.Green, rgb.Blue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;C-HSL-conversions&quot;&gt;&lt;a href=&quot;#C-HSL-conversions&quot; class=&quot;headerlink&quot; title=&quot;C - HSL conversions&quot;&gt;&lt;/a&gt;C - HSL conversions&lt;/h4&gt;&lt;p&gt;&lt;a name=&quot;hsl2&quot; id=&quot;hsl2&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;a-HSL-to-RGB&quot;&gt;&lt;a href=&quot;#a-HSL-to-RGB&quot; class=&quot;headerlink&quot; title=&quot;a - HSL to RGB&quot;&gt;&lt;/a&gt;a - HSL to RGB&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;hsl2rgb&quot; id=&quot;hsl2rgb&quot;&gt;&lt;/a&gt; The conversion principle is the one below :&lt;/p&gt;
&lt;p&gt;&lt;em&gt;H&lt;/em&gt; ? [0, 360]&lt;br&gt;&lt;em&gt;S, L, R, G, B&lt;/em&gt; ? [0, 1]&lt;/p&gt;
&lt;p&gt;if &lt;em&gt;L&lt;/em&gt; &amp;lt; 0.5 ? &lt;em&gt;Q&lt;/em&gt; = &lt;em&gt;L&lt;/em&gt; × (1 + &lt;em&gt;S&lt;/em&gt;)&lt;br&gt;if &lt;em&gt;L&lt;/em&gt; = 0.5 ? &lt;em&gt;Q&lt;/em&gt; = &lt;em&gt;L&lt;/em&gt; + &lt;em&gt;S&lt;/em&gt; – (&lt;em&gt;L&lt;/em&gt; × &lt;em&gt;S&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;P&lt;/em&gt; = 2 × &lt;em&gt;L&lt;/em&gt; – &lt;em&gt;Q&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Hk&lt;/em&gt; = &lt;em&gt;H&lt;/em&gt; / 360&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Tr&lt;/em&gt; = &lt;em&gt;Hk&lt;/em&gt; + 1/3&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Tg&lt;/em&gt; = &lt;em&gt;Hk&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Tb&lt;/em&gt; = &lt;em&gt;Hk&lt;/em&gt; – 1/3&lt;/p&gt;
&lt;p&gt;For each c = R,G,B :&lt;/p&gt;
&lt;p&gt;if &lt;em&gt;Tc&lt;/em&gt; &amp;lt; 0 ? &lt;em&gt;Tc&lt;/em&gt; = &lt;em&gt;Tc&lt;/em&gt; + 1.0&lt;br&gt;if &lt;em&gt;Tc&lt;/em&gt; &amp;gt; 1 ? &lt;em&gt;Tc&lt;/em&gt; = &lt;em&gt;Tc&lt;/em&gt; – 1.0&lt;/p&gt;
&lt;p&gt;if &lt;em&gt;Tc&lt;/em&gt; &amp;lt; 1/6 ? &lt;em&gt;Tc&lt;/em&gt; = &lt;em&gt;P&lt;/em&gt; + ((&lt;em&gt;Q&lt;/em&gt; – &lt;em&gt;P&lt;/em&gt;) × 6.0 × &lt;em&gt;Tc&lt;/em&gt;)&lt;br&gt;if 1/6 = &lt;em&gt;Tc&lt;/em&gt; &amp;gt; 1/2 ? &lt;em&gt;Tc&lt;/em&gt; = &lt;em&gt;Q&lt;/em&gt;&lt;br&gt;if 1/2 = &lt;em&gt;Tc&lt;/em&gt; &amp;gt; 2/3 ? &lt;em&gt;Tc&lt;/em&gt; = &lt;em&gt;P&lt;/em&gt; + ((&lt;em&gt;Q&lt;/em&gt; – &lt;em&gt;P&lt;/em&gt;) × (2/3 – &lt;em&gt;Tc&lt;/em&gt;) × 6.0)&lt;br&gt;else &lt;em&gt;Tc&lt;/em&gt; = &lt;em&gt;P&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The C# equivalent? Here it is.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts HSL to RGB.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;h&amp;quot;&amp;gt;Hue, must be in [0, 360].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;s&amp;quot;&amp;gt;Saturation, must be in [0, 1].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;l&amp;quot;&amp;gt;Luminance, must be in [0, 1].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static RGB HSLtoRGB(double h, double s, double l)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(s == 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // achromatic color (gray scale)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return new RGB(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Convert.ToInt32( Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.00&amp;#125;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                l*255.0)) ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Convert.ToInt32( Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.00&amp;#125;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                l*255.0)) ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Convert.ToInt32( Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.00&amp;#125;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                l*255.0)) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        double q = (l&amp;lt;0.5)?(l * (1.0+s)):(l+s - (l*s));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        double p = (2.0 * l) - q;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        double Hk = h/360.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        double[] T = new double[3];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        T[0] = Hk + (1.0/3.0);    // Tr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        T[1] = Hk;                // Tb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        T[2] = Hk - (1.0/3.0);    // Tg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for(int i=0; i&amp;lt;3; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if(T[i] &amp;lt; 0) T[i] += 1.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if(T[i] &amp;gt; 1) T[i] -= 1.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if((T[i]*6) &amp;lt; 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                T[i] = p + ((q-p)*6.0*T[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            else if((T[i]*2.0) &amp;lt; 1) //(1.0/6.0)&amp;lt;=T[i] &amp;amp;&amp;amp; T[i]&amp;lt;0.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                T[i] = q;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            else if((T[i]*3.0) &amp;lt; 2) // 0.5&amp;lt;=T[i] &amp;amp;&amp;amp; T[i]&amp;lt;(2.0/3.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                T[i] = p + (q-p) * ((2.0/3.0) - T[i]) * 6.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            else T[i] = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return new RGB(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Convert.ToInt32( Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.00&amp;#125;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                T[0]*255.0)) ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Convert.ToInt32( Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.00&amp;#125;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                T[1]*255.0)) ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Convert.ToInt32( Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.00&amp;#125;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                T[2]*255.0)) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;b-HSL-to-HSB&quot;&gt;&lt;a href=&quot;#b-HSL-to-HSB&quot; class=&quot;headerlink&quot; title=&quot;b - HSL to HSB&quot;&gt;&lt;/a&gt;b - HSL to HSB&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;hsl2hsb&quot; id=&quot;hsl2hsb&quot;&gt;&lt;/a&gt;&lt;br&gt;Nothing new: conversion principle is to convert to &lt;strong&gt;RGB&lt;/strong&gt; and then to &lt;strong&gt;HSB&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts HSL to HSB.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static HSB HSLtoHSB(double h, double s, double l)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RGB rgb = HSLtoRGB(h, s, l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return RGBtoHSB(rgb.Red, rgb.Green, rgb.Blue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;c-HSL-to-CMYK&quot;&gt;&lt;a href=&quot;#c-HSL-to-CMYK&quot; class=&quot;headerlink&quot; title=&quot;c - HSL to CMYK&quot;&gt;&lt;/a&gt;c - HSL to CMYK&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;hsl2cymk&quot; id=&quot;hsl2cymk&quot;&gt;&lt;/a&gt;&lt;br&gt;Nothing new: conversion principle is to convert to &lt;strong&gt;RGB&lt;/strong&gt; and then to &lt;strong&gt;CMYK&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts HSL to CMYK.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static CMYK HSLtoCMYK(double h, double s, double l)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RGB rgb = HSLtoRGB(h, s, l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return RGBtoCMYK(rgb.Red, rgb.Green, rgb.Blue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;d-HSL-to-YUV&quot;&gt;&lt;a href=&quot;#d-HSL-to-YUV&quot; class=&quot;headerlink&quot; title=&quot;d - HSL to YUV&quot;&gt;&lt;/a&gt;d - HSL to YUV&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;hsl2yuv&quot; id=&quot;hsl2yuv&quot;&gt;&lt;/a&gt;&lt;br&gt;Nothing new: conversion principle is to convert to &lt;strong&gt;RGB&lt;/strong&gt; and then to &lt;strong&gt;YUV&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts HSL to YUV.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static YUV HSLtoYUV(double h, double s, double l)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RGB rgb = HSLtoRGB(h, s, l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return RGBtoYUV(rgb.Red, rgb.Green, rgb.Blue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;D-CMYK-conversions&quot;&gt;&lt;a href=&quot;#D-CMYK-conversions&quot; class=&quot;headerlink&quot; title=&quot;D - CMYK conversions&quot;&gt;&lt;/a&gt;D - CMYK conversions&lt;/h4&gt;&lt;p&gt;&lt;a name=&quot;cmyk2&quot; id=&quot;cmyk2&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;a-CMYK-to-RGB&quot;&gt;&lt;a href=&quot;#a-CMYK-to-RGB&quot; class=&quot;headerlink&quot; title=&quot;a - CMYK to RGB&quot;&gt;&lt;/a&gt;a - CMYK to RGB&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;cmyk2rgb&quot; id=&quot;cmyk2rgb&quot;&gt;&lt;/a&gt; The conversion principle is the one below :&lt;/p&gt;
&lt;p&gt;&lt;em&gt;tRGB&lt;/em&gt; = { (1 - &lt;em&gt;C&lt;/em&gt;) × (1 - &lt;em&gt;K&lt;/em&gt;) , (1 - &lt;em&gt;M&lt;/em&gt;) × (1 - &lt;em&gt;K&lt;/em&gt;), (1 - &lt;em&gt;Y&lt;/em&gt;) × (1 - &lt;em&gt;K&lt;/em&gt;)}&lt;/p&gt;
&lt;p&gt;The C# equivalent? Here it is.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts CMYK to RGB.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static Color CMYKtoRGB(double c, double m, double y, double k)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int red = Convert.ToInt32((1-c) * (1-k) * 255.0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int green = Convert.ToInt32((1-m) * (1-k) * 255.0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int blue = Convert.ToInt32((1-y) * (1-k) * 255.0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return Color.FromArgb(red, green, blue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;b-CMYK-to-HSL&quot;&gt;&lt;a href=&quot;#b-CMYK-to-HSL&quot; class=&quot;headerlink&quot; title=&quot;b - CMYK to HSL&quot;&gt;&lt;/a&gt;b - CMYK to HSL&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;cmyk2hsl&quot; id=&quot;cmyk2hsl&quot;&gt;&lt;/a&gt;&lt;br&gt;Nothing new: conversion principle is to convert to &lt;strong&gt;RGB&lt;/strong&gt; and then to &lt;strong&gt;HSL&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts CMYK to HSL.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static HSL CMYKtoHSL(double c, double m, double y, double k)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RGB rgb = CMYKtoRGB(c, m, y, k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return RGBtoHSL(rgb.Red, rgb.Green, rgb.Blue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;c-CMYK-to-HSB&quot;&gt;&lt;a href=&quot;#c-CMYK-to-HSB&quot; class=&quot;headerlink&quot; title=&quot;c - CMYK to HSB&quot;&gt;&lt;/a&gt;c - CMYK to HSB&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;cmyk2hsb&quot; id=&quot;cmyk2hsb&quot;&gt;&lt;/a&gt;&lt;br&gt;Nothing new: conversion principle is to convert to &lt;strong&gt;RGB&lt;/strong&gt; and then to &lt;strong&gt;HSB&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts CMYK to HSB.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static HSB CMYKtoHSB(double c, double m, double y, double k)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RGB rgb = CMYKtoRGB(c, m, y, k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return RGBtoHSB(rgb.Red, rgb.Green, rgb.Blue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;d-CMYK-to-YUV&quot;&gt;&lt;a href=&quot;#d-CMYK-to-YUV&quot; class=&quot;headerlink&quot; title=&quot;d - CMYK to YUV&quot;&gt;&lt;/a&gt;d - CMYK to YUV&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;cmyk2yuv&quot; id=&quot;cmyk2yuv&quot;&gt;&lt;/a&gt;&lt;br&gt;Nothing new: conversion principle is to convert to &lt;strong&gt;RGB&lt;/strong&gt; and then to &lt;strong&gt;YUV&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts CMYK to YUV.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static YUV CMYKtoYUV(double c, double m, double y, double k)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RGB rgb = CMYKtoRGB(c, m, y, k);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return RGBtoYUV(rgb.Red, rgb.Green, rgb.Blue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;E-YUV-conversions&quot;&gt;&lt;a href=&quot;#E-YUV-conversions&quot; class=&quot;headerlink&quot; title=&quot;E - YUV conversions&quot;&gt;&lt;/a&gt;E - YUV conversions&lt;/h4&gt;&lt;p&gt;&lt;a name=&quot;yuv2&quot; id=&quot;yuv2&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;a-YUV-to-RGB&quot;&gt;&lt;a href=&quot;#a-YUV-to-RGB&quot; class=&quot;headerlink&quot; title=&quot;a - YUV to RGB&quot;&gt;&lt;/a&gt;a - YUV to RGB&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;yuv2rgb&quot; id=&quot;yuv2rgb&quot;&gt;&lt;/a&gt; The conversion principle is the one below :&lt;/p&gt;
&lt;p&gt;&lt;em&gt;R, G, B, Y&lt;/em&gt; ? [0, 1]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;U&lt;/em&gt; ? [-0.436, 0.436]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;V&lt;/em&gt; ? [-0.615, 0.615]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;tRGB&lt;/em&gt; = { (Y + 1.13983 &lt;em&gt;V&lt;/em&gt;), (&lt;em&gt;Y&lt;/em&gt; - 0.39466 &lt;em&gt;U&lt;/em&gt; - 0.58060 &lt;em&gt;V&lt;/em&gt;), (&lt;em&gt;Y&lt;/em&gt; + 2.03211 &lt;em&gt;U&lt;/em&gt;) }&lt;/p&gt;
&lt;p&gt;The C# equivalent? Here it is.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts YUV to RGB.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;y&amp;quot;&amp;gt;Y must be in [0, 1].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;u&amp;quot;&amp;gt;U must be in [-0.436, +0.436].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;v&amp;quot;&amp;gt;V must be in [-0.615, +0.615].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static RGB YUVtoRGB(double y, double u, double v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RGB rgb = new RGB();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rgb.Red = Convert.ToInt32((y + 1.139837398373983740*v)*255);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rgb.Green = Convert.ToInt32((&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        y - 0.3946517043589703515*u - 0.5805986066674976801*v)*255);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rgb.Blue = Convert.ToInt32((y + 2.032110091743119266*u)*255);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return rgb;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;b-YUV-to-HSL&quot;&gt;&lt;a href=&quot;#b-YUV-to-HSL&quot; class=&quot;headerlink&quot; title=&quot;b - YUV to HSL&quot;&gt;&lt;/a&gt;b - YUV to HSL&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;yuv2hsl&quot; id=&quot;yuv2hsl&quot;&gt;&lt;/a&gt;&lt;br&gt;Nothing new: conversion principle is to convert to &lt;strong&gt;RGB&lt;/strong&gt; and then to &lt;strong&gt;HSL&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts YUV to HSL.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;y&amp;quot;&amp;gt;Y must be in [0, 1].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;u&amp;quot;&amp;gt;U must be in [-0.436, +0.436].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;v&amp;quot;&amp;gt;V must be in [-0.615, +0.615].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static HSL YUVtoHSL(double y, double u, double v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RGB rgb = YUVtoRGB(y, u, v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return RGBtoHSL(rgb.Red, rgb.Green, rgb.Blue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;c-YUV-to-HSB&quot;&gt;&lt;a href=&quot;#c-YUV-to-HSB&quot; class=&quot;headerlink&quot; title=&quot;c - YUV to HSB&quot;&gt;&lt;/a&gt;c - YUV to HSB&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;yuv2hsb&quot; id=&quot;yuv2hsb&quot;&gt;&lt;/a&gt;&lt;br&gt;Nothing new: conversion principle is to convert to &lt;strong&gt;RGB&lt;/strong&gt; and then to &lt;strong&gt;HSB&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts YUV to HSB.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;y&amp;quot;&amp;gt;Y must be in [0, 1].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;u&amp;quot;&amp;gt;U must be in [-0.436, +0.436].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;v&amp;quot;&amp;gt;V must be in [-0.615, +0.615].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static HSB YUVtoHSB(double y, double u, double v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RGB rgb = YUVtoRGB(y, u, v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return RGBtoHSB(rgb.Red, rgb.Green, rgb.Blue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;d-YUV-to-CMYK&quot;&gt;&lt;a href=&quot;#d-YUV-to-CMYK&quot; class=&quot;headerlink&quot; title=&quot;d - YUV to CMYK&quot;&gt;&lt;/a&gt;d - YUV to CMYK&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;yuv2cmyk&quot; id=&quot;yuv2cmyk&quot;&gt;&lt;/a&gt;&lt;br&gt;Nothing new: conversion principle is to convert to &lt;strong&gt;RGB&lt;/strong&gt; and then to &lt;strong&gt;CMYK&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts YUV to CMYK.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;y&amp;quot;&amp;gt;Y must be in [0, 1].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;u&amp;quot;&amp;gt;U must be in [-0.436, +0.436].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;param name=&amp;quot;v&amp;quot;&amp;gt;V must be in [-0.615, +0.615].&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static CMYK YUVtoCMYK(double y, double u, double v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RGB rgb = YUVtoRGB(y, u, v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return RGBtoCMYK(rgb.Red, rgb.Green, rgb.Blue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;F-XYZ-conversions&quot;&gt;&lt;a href=&quot;#F-XYZ-conversions&quot; class=&quot;headerlink&quot; title=&quot;F - XYZ conversions&quot;&gt;&lt;/a&gt;F - XYZ conversions&lt;/h4&gt;&lt;p&gt;&lt;a name=&quot;xyz2&quot; id=&quot;xyz2&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;a-XYZ-to-RGB&quot;&gt;&lt;a href=&quot;#a-XYZ-to-RGB&quot; class=&quot;headerlink&quot; title=&quot;a - XYZ to RGB&quot;&gt;&lt;/a&gt;a - XYZ to RGB&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;xyz2rgb&quot; id=&quot;xyz2rgb&quot;&gt;&lt;/a&gt;The conversion principle is the one below:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;a&lt;/em&gt; = 0.055&lt;br&gt;&lt;img src=&quot;!--￼36--&amp;gt;/images/color/xyz2-1.png&quot; alt=&quot;XYZ to RGB&quot;&gt;&lt;br&gt;then&lt;br&gt;&lt;img src=&quot;!--￼37--&amp;gt;/images/color/xyz2-2.png&quot; alt=&quot;XYZ to RGB&quot;&gt;&lt;/p&gt;
&lt;p&gt;The C# equivalent is :&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts CIEXYZ to RGB structure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static RGB XYZtoRGB(double x, double y, double z)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double[] Clinear = new double[3];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Clinear[0] = x*3.2410 - y*1.5374 - z*0.4986; // red&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Clinear[1] = -x*0.9692 + y*1.8760 - z*0.0416; // green&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Clinear[2] = x*0.0556 - y*0.2040 + z*1.0570; // blue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for(int i=0; i&amp;lt;3; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Clinear[i] = (Clinear[i]&amp;lt;=0.0031308)? 12.92*Clinear[i] : (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            1+0.055)* Math.Pow(Clinear[i], (1.0/2.4)) - 0.055;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return new RGB(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Convert.ToInt32( Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.00&amp;#125;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Clinear[0]*255.0)) ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Convert.ToInt32( Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.00&amp;#125;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Clinear[1]*255.0)) ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Convert.ToInt32( Double.Parse(String.Format(&amp;quot;&amp;#123;0:0.00&amp;#125;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Clinear[2]*255.0)) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;b-XYZ-to-L-a-b&quot;&gt;&lt;a href=&quot;#b-XYZ-to-L-a-b&quot; class=&quot;headerlink&quot; title=&quot;b - XYZ to L*a*b*&quot;&gt;&lt;/a&gt;b - XYZ to L*a*b*&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;xyz2lab&quot; id=&quot;xyz2lab&quot;&gt;&lt;/a&gt;The conversion principle is the one below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;!--￼38--&amp;gt;/images/color/xyz2-3.png&quot; alt=&quot;XYZ to L\*a\*b\*&quot;&gt;&lt;br&gt;&lt;img src=&quot;!--￼39--&amp;gt;/images/color/xyz2-4.png&quot; alt=&quot;XYZ to L\*a\*b\*&quot;&gt;&lt;br&gt;&lt;img src=&quot;!--￼40--&amp;gt;/images/color/xyz2-5.png&quot; alt=&quot;XYZ to L\*a\*b\*&quot;&gt;&lt;/p&gt;
&lt;p&gt;where&lt;br&gt;&lt;img src=&quot;!--￼41--&amp;gt;/images/color/xyz2-6.png&quot; alt=&quot;XYZ to L\*a\*b\*&quot;&gt; for &lt;em&gt;t&lt;/em&gt; &amp;gt; 0.008856&lt;br&gt;&lt;img src=&quot;!--￼42--&amp;gt;/images/color/xyz2-7.png&quot; alt=&quot;XYZ to L\*a\*b\*&quot;&gt; otherwise&lt;/p&gt;
&lt;p&gt;Xn, Yn and Zn are the CIE XYZ tristimulus values of the reference white point.&lt;/p&gt;
&lt;p&gt;The C# equivalent is:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// XYZ to L*a*b* transformation function.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;private static double Fxyz(double t)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return ((t &amp;gt; 0.008856)? Math.Pow(t, (1.0/3.0)) : (7.787*t + 16.0/116.0));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts CIEXYZ to CIELab.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static CIELab XYZtoLab(double x, double y, double z)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CIELab lab = CIELab.Empty;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lab.L = 116.0 * Fxyz( y/CIEXYZ.D65.Y ) -16;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lab.A = 500.0 * (Fxyz( x/CIEXYZ.D65.X ) - Fxyz( y/CIEXYZ.D65.Y) );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lab.B = 200.0 * (Fxyz( y/CIEXYZ.D65.Y ) - Fxyz( z/CIEXYZ.D65.Z) );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return lab;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;####G - L*a*b* conversions&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;lab2&quot; id=&quot;lab2&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#####a - L*a*b* to XYZ&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;lab2xyz&quot; id=&quot;lab2xyz&quot;&gt;&lt;/a&gt;&lt;br&gt;The conversion principle is the one below:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;d&lt;/em&gt; = 6/29&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;!--￼43--&amp;gt;/images/color/lab2-1.png&quot; alt=&quot;L\*a\*b\* to XYZ&quot;&gt;&lt;br&gt;&lt;img src=&quot;!--￼44--&amp;gt;/images/color/lab2-2.png&quot; alt=&quot;L\*a\*b\* to XYZ&quot;&gt;&lt;br&gt;&lt;img src=&quot;!--￼45--&amp;gt;/images/color/lab2-3.png&quot; alt=&quot;L\*a\*b\* to XYZ&quot;&gt;&lt;/p&gt;
&lt;p&gt;if &lt;img src=&quot;!--￼46--&amp;gt;/images/color/lab2-4-1.png&quot; alt=&quot;L\*a\*b\* to XYZ&quot;&gt; then &lt;img src=&quot;!--￼47--&amp;gt;/images/color/lab2-4-2.png&quot; alt=&quot;L\*a\*b\* to XYZ&quot;&gt;else &lt;img src=&quot;!--￼48--&amp;gt;/images/color/lab2-4-3.png&quot; alt=&quot;L\*a\*b\* to XYZ&quot;&gt;&lt;br&gt;if &lt;img src=&quot;!--￼49--&amp;gt;/images/color/lab2-5-1.png&quot; alt=&quot;L\*a\*b\* to XYZ&quot;&gt; then &lt;img src=&quot;!--￼50--&amp;gt;/images/color/lab2-5-2.png&quot; alt=&quot;L\*a\*b\* to XYZ&quot;&gt;else &lt;img src=&quot;!--￼51--&amp;gt;/images/color/lab2-5-3.png&quot; alt=&quot;L\*a\*b\* to XYZ&quot;&gt;&lt;br&gt;if &lt;img src=&quot;!--￼52--&amp;gt;/images/color/lab2-6-1.png&quot; alt=&quot;L\*a\*b\* to XYZ&quot;&gt; then &lt;img src=&quot;!--￼53--&amp;gt;/images/color/lab2-6-2.png&quot; alt=&quot;L\*a\*b\* to XYZ&quot;&gt;else &lt;img src=&quot;!--￼54--&amp;gt;/images/color/lab2-6-3.png&quot; alt=&quot;L\*a\*b\* to XYZ&quot;&gt;&lt;/p&gt;
&lt;p&gt;The C# equivalent is:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts CIELab to CIEXYZ.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static CIEXYZ LabtoXYZ(double l, double a, double b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double delta = 6.0/29.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double fy = (l+16)/116.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double fx = fy + (a/500.0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double fz = fy - (b/200.0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return new CIEXYZ(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (fx &amp;gt; delta)? CIEXYZ.D65.X * (fx*fx*fx) : (fx - 16.0/116.0)*3*(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            delta*delta)*CIEXYZ.D65.X,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (fy &amp;gt; delta)? CIEXYZ.D65.Y * (fy*fy*fy) : (fy - 16.0/116.0)*3*(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            delta*delta)*CIEXYZ.D65.Y,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (fz &amp;gt; delta)? CIEXYZ.D65.Z * (fz*fz*fz) : (fz - 16.0/116.0)*3*(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            delta*delta)*CIEXYZ.D65.Z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;b-L-a-b-to-RGB&quot;&gt;&lt;a href=&quot;#b-L-a-b-to-RGB&quot; class=&quot;headerlink&quot; title=&quot;b - L*a*b* to RGB&quot;&gt;&lt;/a&gt;b - L*a*b* to RGB&lt;/h5&gt;&lt;p&gt;&lt;a name=&quot;lab2rgb&quot; id=&quot;lab2rgb&quot;&gt;&lt;/a&gt;Nothing really new, the principle is to convert to &lt;strong&gt;XYZ&lt;/strong&gt; and then to &lt;strong&gt;RGB&lt;/strong&gt; :&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Converts CIELab to RGB.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static RGB LabtoRGB(double l, double a, double b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return XYZtoRGB( LabtoXYZ(l, a, b) );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Using-the-code&quot;&gt;&lt;a href=&quot;#Using-the-code&quot; class=&quot;headerlink&quot; title=&quot;Using the code&quot;&gt;&lt;/a&gt;Using the code&lt;/h3&gt;&lt;p&gt;&lt;a name=&quot;utc&quot; id=&quot;utc&quot;&gt;&lt;/a&gt; Well, after showing you the conversion algorithms, maybe there is nothing more I can tell you.&lt;/p&gt;
&lt;p&gt;In fact, there are many other useful methods in &lt;code&gt;ColorSpaceHelper&lt;/code&gt;. You will find: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Average color implementation (&lt;code&gt;ColorSpaceHelper.GetColorDistance()&lt;/code&gt;). &lt;/li&gt;
&lt;li&gt;Wheel color generation (&lt;code&gt;ColorSpaceHelper.GetWheelColors()&lt;/code&gt;) with 32bit support (alpha). &lt;/li&gt;
&lt;li&gt;Light spectrum color generation for (&lt;code&gt;ColorSpaceHelper.GetSpectrumColors()&lt;/code&gt;) with 32bit support (alpha). &lt;/li&gt;
&lt;li&gt;Conversion to and from web colors (&lt;code&gt;ColorSpaceHelper.HexToColor()&lt;/code&gt;). &lt;/li&gt;
&lt;li&gt;Conversion to and from &lt;code&gt;System.Drawing.Color&lt;/code&gt; and the other structures. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, I am planning to write a C# class for colors for easier use in UWP and WPF apps. Hope you like it!  &lt;a href=&quot;#&quot;&gt;link(not finished)&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;  Recently, i am doing a research on a project to convert RGB to HSB, which leads me to an awesome &lt;a href=&quot;http://www.codeproject.com/Articles/19045/Manipulating-colors-in-NET-Part-1&quot;&gt;article&lt;/a&gt; on CodeProject from 9 years ago. Hence, I sort the article a little bit to help myself understand more of color agorithm.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to judge whether a webpage existed in a fast way</title>
    <link href="http://www.westudio.ml/2016/03/2016-3-9-How-to-judge-whether-a-webpage-existed-in-a-fast-way/"/>
    <id>http://www.westudio.ml/2016/03/2016-3-9-How-to-judge-whether-a-webpage-existed-in-a-fast-way/</id>
    <published>2016-03-09T00:00:00.000Z</published>
    <updated>2016-06-15T09:38:18.433Z</updated>
    
    <content type="html">&lt;p&gt;Recently I am coding a app for viewing newspaper. Because there are no API, I have to manually find whether the page ever existed. So I try to look on the Internet, and find a try catch way to judge it:&lt;/p&gt;
 &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;HttpWebResponse response = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; var request = (HttpWebRequest)WebRequest.Create(/* url */);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; request.Method = “HEAD”;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; response = (HttpWebResponse)request.GetResponse();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; catch (WebException ex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; /* A WebException will be thrown if the status of the response is not `200 OK` */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; finally&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // Don’t forget to close your response.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; if (response != null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response.Close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;However, I find that GetResponse method now no longer existed in .NET framework 4.5.2. So I find a another one that worked. But it is very slow. So I come up with an idea-using the HTTP head to find out whether it exists, and it is a lot faster:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;HttpClient httpClient = new HttpClient();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//Getting the Web Response.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; HttpResponseMessage httpResponse = new HttpResponseMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, new Uri(website));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; httpResponse = await httpClient.SendRequestAsync(request);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; if(httpResponse.ToString().Contains(“StatusCode: 404”))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // do something when the page doesn’t exist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/images/working-code.png&quot; alt=&quot;real working code&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Recently I am coding a app for viewing newspaper. Because there are no API, I have to manually find whether the page ever existed. So I try to look on the Internet, and find a try catch way to judge it:&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to create a new window in UWP</title>
    <link href="http://www.westudio.ml/2016/02/How-to-create-a-new-window-in-UWP/"/>
    <id>http://www.westudio.ml/2016/02/How-to-create-a-new-window-in-UWP/</id>
    <published>2016-02-07T00:00:00.000Z</published>
    <updated>2016-06-15T10:25:59.002Z</updated>
    
    <content type="html">&lt;p&gt;Some friends of mine asked me how to create a window like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/new-window.png&quot; alt=&quot;new window in UWP&quot;&gt;&lt;/p&gt;
&lt;p&gt;I cannot say this is difficult or simple. In order to open a new window, You need to use CoreApplication.CreateNewView() to generate the Window, or view:&lt;/p&gt;
 &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var currentAV = ApplicationView.GetForCurrentView();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;await newAV.Dispatcher.RunAsync(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; CoreDispatcherPriority.Normal,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; async () =&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; var newWindow = Window.Current;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; var newAppView = ApplicationView.GetForCurrentView();newAppView.Title = title;  //The title of new windowvar frame = new Frame();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; frame.Navigate(typeof(Page), Datatosend); //Navigation is here&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; newWindow.Content = frame;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; newWindow.Activate();await ApplicationViewSwitcher.TryShowAsStandaloneAsync(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;newAppView.Id,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ViewSizePreference.UseMinimum,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;currentAV.Id,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ViewSizePreference.UseMinimum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;Some friends of mine asked me how to create a window like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/new-window.png&quot; alt=&quot;new window in UWP&quot;&gt;&lt;/p&gt;
&lt;p&gt;I cannot say this is difficult or simple. In order to open a new window, You need to use CoreApplication.CreateNewView() to generate the Window, or view:&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Usage Of the new Segoe MDL2 icons</title>
    <link href="http://www.westudio.ml/2015/11/Usage-Of-the-new-Segoe-MDL2-icons/"/>
    <id>http://www.westudio.ml/2015/11/Usage-Of-the-new-Segoe-MDL2-icons/</id>
    <published>2015-11-26T16:00:00.000Z</published>
    <updated>2016-06-15T09:39:23.957Z</updated>
    
    <content type="html">&lt;p&gt;The Windows 8/8.1 &lt;strong&gt;Segoe UI Symbol&lt;/strong&gt; icon font has been replaced with the &lt;strong&gt;Segoe MDL2 Assets&lt;/strong&gt; font effective with the release of Windows 10. It can be used in much the same manner as the older font, but many glyphs have been redrawn in the Windows 10 icon style with the font’s metrics set so that icons are aligned within the font’s em-square instead of on a typographic baseline.So in Windows 10, You have to use the new Segoe MDL2. Besides the traditional use, There is other more simple way of using them. Font direct is a way I find that can be useful. I found this way by using the IntensiveTemplate to build my app uwp.HKUST. They use the direct font:&lt;/p&gt;
 &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;/images/image-2.png&quot; alt=&quot;code&quot;&gt; &lt;/p&gt;
&lt;p&gt;Then it will be very hard to input the font. I have tried to find a good website to find the way to input the font since the system itself don’t support the extended Segoe UI Symbol series. I find a great website to transfer the code: &lt;a href=&quot;https://www.branah.com/unicode-converter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Unicode Converter&lt;/a&gt; . This is a great website to type the untypeable code.&lt;/p&gt;
&lt;p&gt;Now, WeCode is the app developed by me that simplified everything for you.&lt;a href=&quot;https://www.microsoft.com/store/apps/9nblggh5p90f&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Download&lt;/a&gt; here now!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;The Windows 8/8.1 &lt;strong&gt;Segoe UI Symbol&lt;/strong&gt; icon font has been replaced with the &lt;strong&gt;Segoe MDL2 Assets&lt;/strong&gt; font effective with the release of Windows 10. It can be used in much the same manner as the older font, but many glyphs have been redrawn in the Windows 10 icon style with the font’s metrics set so that icons are aligned within the font’s em-square instead of on a typographic baseline.So in Windows 10, You have to use the new Segoe MDL2. Besides the traditional use, There is other more simple way of using them. Font direct is a way I find that can be useful. I found this way by using the IntensiveTemplate to build my app uwp.HKUST. They use the direct font:&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Windows Phone 8 LongListSelector按拼音首字母分组</title>
    <link href="http://www.westudio.ml/2014/10/WP8-LongListSelector-pinyin/"/>
    <id>http://www.westudio.ml/2014/10/WP8-LongListSelector-pinyin/</id>
    <published>2014-10-15T16:00:00.000Z</published>
    <updated>2016-06-15T09:39:03.805Z</updated>
    
    <content type="html">&lt;p&gt;Windows Phone 8的LongListSelector控件按拼音分组主要有两种方法，一个是在数据源里手工指定拼音首字母字段，作为index，这种方法效率高但会造成数据冗余不宜维护。另一个就是我今天介绍的方法，来自MSDN，虽然官网例子是针对是英文数据的首字母分组，但其实稍微改一下还是是支持中文的。&lt;/p&gt;
&lt;p&gt;实现方法很简单。首先你需要一个来自MSDN的AlphaKeyGroup类，代码如下：&lt;/p&gt;
 &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class AlphaKeyGroup&amp;lt;T&amp;gt; : List&amp;lt;T&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// The delegate that is used to get the key information.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;param name=&amp;quot;item&amp;quot;&amp;gt;An object of type T&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;returns&amp;gt;The key value to use for this object&amp;lt;/returns&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public delegate string GetKeyDelegate(T item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// The Key of this group.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public string Key &amp;#123; get; private set; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Public constructor.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;param name=&amp;quot;key&amp;quot;&amp;gt;The key for this group.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public AlphaKeyGroup(string key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Key = key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Create a list of AlphaGroup&amp;lt;T&amp;gt; with keys set by a SortedLocaleGrouping.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;param name=&amp;quot;slg&amp;quot;&amp;gt;The &amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;returns&amp;gt;Theitems source for a LongListSelector&amp;lt;/returns&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private static List&amp;lt;AlphaKeyGroup&amp;lt;T&amp;gt;&amp;gt; CreateGroups(SortedLocaleGrouping slg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return slg.GroupDisplayNames.Select(key =&amp;gt; new AlphaKeyGroup&amp;lt;T&amp;gt;(key)).ToList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Create a list of AlphaGroup&amp;lt;T&amp;gt; with keys set by a SortedLocaleGrouping.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;param name=&amp;quot;items&amp;quot;&amp;gt;The items to place in the groups.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;param name=&amp;quot;ci&amp;quot;&amp;gt;The CultureInfo to group and sort by.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;param name=&amp;quot;getKey&amp;quot;&amp;gt;A delegate to get the key from an item.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;param name=&amp;quot;sort&amp;quot;&amp;gt;Will sort the data if true.&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;returns&amp;gt;An items source for a LongListSelector&amp;lt;/returns&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static List&amp;lt;AlphaKeyGroup&amp;lt;T&amp;gt;&amp;gt; CreateGroups(IEnumerable&amp;lt;T&amp;gt; items, CultureInfo ci, GetKeyDelegate getKey, bool sort)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var slg = new SortedLocaleGrouping(ci);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var list = CreateGroups(slg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        foreach (var item in items)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var index = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (slg.SupportsPhonetics)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                //check if your database has yomi string for item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                //if it does not, then do you want to generate Yomi or ask the user for this item.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                //index = slg.GetGroupIndex(getKey(Yomiof(item)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                index = slg.GetGroupIndex(getKey(item));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (index &amp;gt;= 0 &amp;amp;&amp;amp; index &amp;lt; list.Count)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                list[index].Add(item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (!sort) return list;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        foreach (var group in list)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            @group.Sort((c0, c1) =&amp;gt; ci.CompareInfo.Compare(getKey(c0), getKey(c1)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return list;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个类里面主要的精髓就在于：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var slg = new SortedLocaleGrouping(ci);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;SortedLocaleGrouping可以根据传入的传入的CultureInfo返回经过排序的组标头。&lt;/p&gt;
&lt;p&gt;要按照拼音首字母排序，我们只要传入中国大陆的CultureInfo就可以了，也就是zh-CN。在中文环境的Windows Phone系统上，当然也可以用当前UI线程的CultureInfo去获得&lt;br&gt;System.Threading.Thread.CurrentThread.CurrentUICulture&lt;/p&gt;
&lt;p&gt;但是为了保证我们的拼音排序能在任何语言设置下都统一，我还是建议写死zh-CN在里面。&lt;/p&gt;
&lt;p&gt;在我的应用里，我需要按地铁站点(Station类)的地铁站名首字母(Station.StationName)分组，所以我绑定的集合要用AlphaKeyGroup包一下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public ObservableCollection&amp;lt;AlphaKeyGroup&amp;lt;Station&amp;gt;&amp;gt; GroupedStations &amp;#123; ... &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后，在给这个集合赋值的地方写Group的具体逻辑：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GroupedStations = AlphaKeyGroup&amp;lt;Station&amp;gt;.CreateGroups(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AllStations,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    new CultureInfo(&amp;quot;zh-CN&amp;quot;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s =&amp;gt; s.StationName.Substring(0, 1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    true).ToObservableCollection();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个参数AllStations是原始数据，一个普通的IEnumerable&lt;station&gt;集合。&lt;/station&gt;&lt;/p&gt;
&lt;p&gt;第二个参数是最重要的，按哪种Culture进行分组，一定要传入zh-CN，简体中文。&lt;/p&gt;
&lt;p&gt;第三个参数是个lambda表达式，这个委托负责分组字段的具体逻辑，在这里我们要按Station.StationName的第一个字的拼音首字母排序，所以需要取Substring(0,1)，返回Station.StationName的第一个字，之后SortedLocaleGrouping就可以自动进行拼音首字母分组了。&lt;/p&gt;
&lt;p&gt;第四个参数表示经过分组的排序结果需不需要排序，true表示需要排序，这也是我们通常的需求。&lt;/p&gt;
&lt;p&gt;至此，后端代码的工作就全部搞定了。前台xaml上的数据绑定还是和普通的LongListSelector没啥区别。&lt;/p&gt;
&lt;p&gt;XAML:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;phone:LongListSelector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    x:Name=&amp;quot;StationListSelector&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ItemsSource=&amp;quot;&amp;#123;Binding GroupedStations, Mode=TwoWay&amp;#125;&amp;quot; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    JumpListStyle=&amp;quot;&amp;#123;StaticResource StationListJumpListStyle&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IsGroupingEnabled=&amp;quot;True&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    HideEmptyGroups=&amp;quot;True&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SelectionChanged=&amp;quot;SelectStation&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    toolkit:TiltEffect.IsTiltEnabled=&amp;quot;True&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;phone:LongListSelector.GroupHeaderTemplate&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;DataTemplate&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;Border &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                BorderBrush=&amp;quot;&amp;#123;StaticResource PhoneAccentBrush&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Padding=&amp;quot;15,0&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Width=&amp;quot;75&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Height=&amp;quot;75&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Margin=&amp;quot;0,0,0,10&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                BorderThickness=&amp;quot;2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                HorizontalAlignment=&amp;quot;Left&amp;quot; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    Background=&amp;quot;White&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;TextBlock Text=&amp;quot;&amp;#123;Binding Key&amp;#125;&amp;quot; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           FontSize=&amp;quot;48&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           Foreground=&amp;quot;&amp;#123;StaticResource PhoneAccentBrush&amp;#125;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/TextBlock&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/Border&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/DataTemplate&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/phone:LongListSelector.GroupHeaderTemplate&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;App.xaml里的Style:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Style x:Key=&amp;quot;StationListJumpListStyle&amp;quot; TargetType=&amp;quot;phone:LongListSelector&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Setter Property=&amp;quot;GridCellSize&amp;quot;  Value=&amp;quot;113,113&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Setter Property=&amp;quot;LayoutMode&amp;quot; Value=&amp;quot;Grid&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Setter Property=&amp;quot;ItemTemplate&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;Setter.Value&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;DataTemplate&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;Border Background=&amp;quot;&amp;#123;StaticResource PhoneAccentBrush&amp;#125;&amp;quot; Width=&amp;quot;113&amp;quot; Height=&amp;quot;113&amp;quot; Margin=&amp;quot;6&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;TextBlock Text=&amp;quot;&amp;#123;Binding Key&amp;#125;&amp;quot; FontFamily=&amp;quot;&amp;#123;StaticResource PhoneFontFamilySemiBold&amp;#125;&amp;quot; FontSize=&amp;quot;48&amp;quot; Padding=&amp;quot;6&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Foreground=&amp;quot;&amp;#123;StaticResource PhoneForegroundBrush&amp;#125;&amp;quot; VerticalAlignment=&amp;quot;Center&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/Border&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/DataTemplate&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/Setter.Value&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/Setter&amp;gt;&amp;lt;/Style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;转自：&lt;a href=&quot;http://diaosbook.com/Post/2014/2/22/longlistselector-group-by-py-wp8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://diaosbook.com/Post/2014/2/22/longlistselector-group-by-py-wp8&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Windows Phone 8的LongListSelector控件按拼音分组主要有两种方法，一个是在数据源里手工指定拼音首字母字段，作为index，这种方法效率高但会造成数据冗余不宜维护。另一个就是我今天介绍的方法，来自MSDN，虽然官网例子是针对是英文数据的首字母分组，但其实稍微改一下还是是支持中文的。&lt;/p&gt;
&lt;p&gt;实现方法很简单。首先你需要一个来自MSDN的AlphaKeyGroup类，代码如下：&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Windows Phone 8 开发：应用崩溃时给作者发送错误报告邮件</title>
    <link href="http://www.westudio.ml/2014/10/wp-feedback/"/>
    <id>http://www.westudio.ml/2014/10/wp-feedback/</id>
    <published>2014-10-14T16:00:00.000Z</published>
    <updated>2016-06-15T09:38:55.524Z</updated>
    
    <content type="html">&lt;p&gt;我们的应用难免会爆，但是手工在各个方法上加try…catch…未必能cover到所有场景，有时候我们不希望应用吞掉错误，发生严重异常时，我们应当允许应用在用户面前爆掉。如果没有处理这些异常，应用程序的表现就是闪退。比较好的做法是在应用崩溃时给用户一个选择是否发送邮件告诉应用作者崩溃的详细日志。对于作者来说，等待DevCenter的异常报告相对而言比较被动。如果能在应用崩溃之后立即得到回馈那就可以尽早修复问题。&lt;/p&gt;
&lt;p&gt;做法很简单，和ASP.NET网站在Global.asax中使用的全局错误处理类似，WP应用也有个全局错误处理的事件。&lt;/p&gt;
&lt;p&gt;打开App.xaml.cs，定位到Application_UnhandledException(object sender, ApplicationUnhandledExceptionEventArgs e)事件处理函数上。&lt;/p&gt;
 &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;当任何未处理的异常产生时，这个函数都会被call到。我们的任务是发送邮件给应用作者（通常就是你自己），所以我们可以把项目模板中默认的代码给去掉，删除这些代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (Debugger.IsAttached)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // An unhandled exception has occurred; break into the debugger&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Debugger.Break();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后换成我们自己代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var result = MessageBox.Show(&amp;quot;程序不小心爆掉了。点击确定发送错误详情给软件作者以帮助改进软件。&amp;quot;,  &amp;quot;注定孤独一生&amp;quot;,MessageBoxButton.OKCancel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (result == MessageBoxResult.OK)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var msg = e.ExceptionObject.Message;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while(null != e.ExceptionObject.InnerException)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e.ExceptionObject = e.ExceptionObject.InnerException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg += (e.ExceptionObject.Message + Environment.NewLine);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var emailComposeTask = new EmailComposeTask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Subject = string.Format(&amp;quot;《你的应用名称》应用异常报告&amp;quot;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Body = &amp;quot;Message: &amp;quot; + msg,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      To =&amp;quot;你的Email地址&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    emailComposeTask.Show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e.Handled = true;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码比较直接，首先，用MessageBox给用户弹了个框，让用户自己选择是否发送错误报告。如果用户选择了“确定”，就开始收集异常详情。ApplicationUnhandledExceptionEventArgs这个参数的ExceptionObject类型就是System.Exception，所以获取最上层的异常消息做法就像平时try…catch里通常写的ex.Message类似，可以通过Exception对象Message属性获得&lt;br&gt;e.ExceptionObject.Message。&lt;/p&gt;
&lt;p&gt;然而，异常并不通常只有一层，有时候我们会遇到exception里还包着一个innerexception的情况，并且我们不知道是不是包了两层就结束了，有可能innerexception里还有innerexception，所以就得写个循环来遍历直到最底层的innerexception，于是就有了这段代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;while&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(null != e.ExceptionObject.InnerException)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e.ExceptionObject = e.ExceptionObject.InnerException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg += (e.ExceptionObject.Message + Environment.NewLine);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中，“Environment.NewLine”的意思是换行，目的是提高邮件的可阅读性。&lt;/p&gt;
&lt;p&gt;收集完异常信息后，我们要调用WP系统提供的发送邮件的task来发送异常报告。我们的应用调用系统任务，比如发邮件、打电话、发短信都是通过Task来完成的，email的用法在MSDN上可以找到：&lt;a href=&quot;http://msdn.microsoft.com/en-US/library/windowsphone/develop/hh394003%28v=vs.105%29.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://msdn.microsoft.com/en-US/library/windowsphone/develop/hh394003%28v=vs.105%29.aspx&lt;/a&gt; 这个网页里你也能找到其他task的用法。&lt;/p&gt;
&lt;p&gt;Subject是邮件的主题，Body是正文，To是收件人。当然，如果你需要，你还可以增加Bcc(密件抄送)和Cc(抄送)。&lt;/p&gt;
&lt;p&gt;转自：&lt;a href=&quot;http://diaosbook.com/Post/2014/3/23/send-error-report-windows-phone-8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://diaosbook.com/Post/2014/3/23/send-error-report-windows-phone-8&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我们的应用难免会爆，但是手工在各个方法上加try…catch…未必能cover到所有场景，有时候我们不希望应用吞掉错误，发生严重异常时，我们应当允许应用在用户面前爆掉。如果没有处理这些异常，应用程序的表现就是闪退。比较好的做法是在应用崩溃时给用户一个选择是否发送邮件告诉应用作者崩溃的详细日志。对于作者来说，等待DevCenter的异常报告相对而言比较被动。如果能在应用崩溃之后立即得到回馈那就可以尽早修复问题。&lt;/p&gt;
&lt;p&gt;做法很简单，和ASP.NET网站在Global.asax中使用的全局错误处理类似，WP应用也有个全局错误处理的事件。&lt;/p&gt;
&lt;p&gt;打开App.xaml.cs，定位到Application_UnhandledException(object sender, ApplicationUnhandledExceptionEventArgs e)事件处理函数上。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Byte[],Stream,Ibuffer,IRandomAccessStream的互相转换</title>
    <link href="http://www.westudio.ml/2014/09/2014-9-7-Byte-Stream-Ibuffer-conversion/"/>
    <id>http://www.westudio.ml/2014/09/2014-9-7-Byte-Stream-Ibuffer-conversion/</id>
    <published>2014-09-07T12:46:25.000Z</published>
    <updated>2016-06-15T09:38:45.058Z</updated>
    
    <content type="html">&lt;p&gt;今天做8.1程序时彻底弄混了IRandomAcessStream和Stream。。。于是乎，我找了一个可用的不同类型转换。。。。&lt;/p&gt;
&lt;h3 id=&quot;Stream-转IRandomAccessStream&quot;&gt;&lt;a href=&quot;#Stream-转IRandomAccessStream&quot; class=&quot;headerlink&quot; title=&quot;Stream 转IRandomAccessStream&quot;&gt;&lt;/a&gt;Stream 转IRandomAccessStream&lt;/h3&gt;&lt;h4 id=&quot;方法一：&quot;&gt;&lt;a href=&quot;#方法一：&quot; class=&quot;headerlink&quot; title=&quot;方法一：&quot;&gt;&lt;/a&gt;方法一：&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;byte[] bytes = StreamToBytes(stream);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;InMemoryRandomAccessStream memoryStream = new InMemoryRandomAccessStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DataWriter datawriter = new DataWriter(memoryStream.GetOutputStreamAt(0));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datawriter.WriteBytes(bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;await datawriter.StoreAsync();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;方法二：&quot;&gt;&lt;a href=&quot;#方法二：&quot; class=&quot;headerlink&quot; title=&quot;方法二：&quot;&gt;&lt;/a&gt;方法二：&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var randomAccessStream = new InMemoryRandomAccessStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var outputStream = randomAccessStream.GetOutputStreamAt(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;await RandomAccessStream.CopyAsync(stream.AsInputStream(), outputStream);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;IRandomAccessStream-转-Stream&quot;&gt;&lt;a href=&quot;#IRandomAccessStream-转-Stream&quot; class=&quot;headerlink&quot; title=&quot;IRandomAccessStream 转 Stream&quot;&gt;&lt;/a&gt;IRandomAccessStream 转 Stream&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream stream=WindowsRuntimeStreamExtensions.AsStreamForRead(randomStream.GetInputStreamAt(0));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Ibuffer转Stream&quot;&gt;&lt;a href=&quot;#Ibuffer转Stream&quot; class=&quot;headerlink&quot; title=&quot;Ibuffer转Stream&quot;&gt;&lt;/a&gt;Ibuffer转Stream&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream stream = WindowsRuntimeBufferExtensions.AsStream(buffer);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Stream转Ibuffer&quot;&gt;&lt;a href=&quot;#Stream转Ibuffer&quot; class=&quot;headerlink&quot; title=&quot;Stream转Ibuffer&quot;&gt;&lt;/a&gt;Stream转Ibuffer&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; MemoryStream memoryStream = new MemoryStream();           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; if (stream != null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  byte[] bytes = ReadFully(stream);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if (bytes != null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       var binaryWriter = new BinaryWriter(memoryStream);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       binaryWriter.Write(bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IBuffer buffer=WindowsRuntimeBufferExtensions.GetWindowsRuntimeBuffer(memoryStream,0,(int)memoryStream.Length);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Ibuffer转byte&quot;&gt;&lt;a href=&quot;#Ibuffer转byte&quot; class=&quot;headerlink&quot; title=&quot;Ibuffer转byte[]&quot;&gt;&lt;/a&gt;Ibuffer转byte[]&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;byte[] bytes=WindowsRuntimeBufferExtensions.ToArray(buffer,0,(int)buffer.Length);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Byte-转Ibuffer&quot;&gt;&lt;a href=&quot;#Byte-转Ibuffer&quot; class=&quot;headerlink&quot; title=&quot;Byte[]转Ibuffer&quot;&gt;&lt;/a&gt;Byte[]转Ibuffer&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WindowsRuntimeBufferExtensions.AsBuffer(bytes,0,bytes.Length);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Ibuffer转IrandomAccessStream&quot;&gt;&lt;a href=&quot;#Ibuffer转IrandomAccessStream&quot; class=&quot;headerlink&quot; title=&quot;Ibuffer转IrandomAccessStream&quot;&gt;&lt;/a&gt;Ibuffer转IrandomAccessStream&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;InMemoryRandomAccessStream inStream = new InMemoryRandomAccessStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DataWriter datawriter = new DataWriter(inStream.GetOutputStreamAt(0));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datawriter.WriteBuffer(buffer,0,buffer.Length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;await datawriter.StoreAsync();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;IrandomAccessStream转Ibuffer&quot;&gt;&lt;a href=&quot;#IrandomAccessStream转Ibuffer&quot; class=&quot;headerlink&quot; title=&quot;IrandomAccessStream转Ibuffer&quot;&gt;&lt;/a&gt;IrandomAccessStream转Ibuffer&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream stream=WindowsRuntimeStreamExtensions.AsStreamForRead(randomStream.GetInputStreamAt(0));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MemoryStream memoryStream = new MemoryStream();           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (stream != null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  byte[] bytes = ReadFully(stream);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if (bytes != null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     var binaryWriter = new BinaryWriter(memoryStream);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     binaryWriter.Write(bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IBuffer buffer=WindowsRuntimeBufferExtensions.GetWindowsRuntimeBuffer(memoryStream,0,(int)memoryStream.Length);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;IRandomAccessStream转FileInputStream&quot;&gt;&lt;a href=&quot;#IRandomAccessStream转FileInputStream&quot; class=&quot;headerlink&quot; title=&quot;IRandomAccessStream转FileInputStream&quot;&gt;&lt;/a&gt;IRandomAccessStream转FileInputStream&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;FileInputStream inputStream=randomStream.GetInputStreamAt(0) as FileInputStream;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;IRandomAccessStream转FileOutputStream&quot;&gt;&lt;a href=&quot;#IRandomAccessStream转FileOutputStream&quot; class=&quot;headerlink&quot; title=&quot;IRandomAccessStream转FileOutputStream&quot;&gt;&lt;/a&gt;IRandomAccessStream转FileOutputStream&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;FileOutputStream outStream= randomStream.GetOutputStreamAt(0) as FileOutputStream;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Stream转byte&quot;&gt;&lt;a href=&quot;#Stream转byte&quot; class=&quot;headerlink&quot; title=&quot;Stream转byte[]&quot;&gt;&lt;/a&gt;Stream转byte[]&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static byte[] ConvertStreamTobyte(Stream input)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       byte[] buffer = new byte[16 * 1024];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       using (MemoryStream ms = new MemoryStream())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               int read;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               while ((read = input.Read(buffer, 0, buffer.Length)) &amp;gt; 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   ms.Write(buffer, 0, read);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           return ms.ToArray();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Byte转Stream&quot;&gt;&lt;a href=&quot;#Byte转Stream&quot; class=&quot;headerlink&quot; title=&quot;Byte转Stream&quot;&gt;&lt;/a&gt;Byte转Stream&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public Stream BytesToStream(byte[] bytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Stream stream = new MemoryStream(bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return stream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Stream转MemoryStream&quot;&gt;&lt;a href=&quot;#Stream转MemoryStream&quot; class=&quot;headerlink&quot; title=&quot;Stream转MemoryStream&quot;&gt;&lt;/a&gt;Stream转MemoryStream&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static MemoryStream ConvertStreamToMemoryStream(Stream stream)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MemoryStream memoryStream = new MemoryStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (stream != null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            byte[] buffer = ReadFully(stream);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (buffer != null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                var binaryWriter = new BinaryWriter(memoryStream);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                binaryWriter.Write(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return memoryStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;IrandomAccessStream转byte&quot;&gt;&lt;a href=&quot;#IrandomAccessStream转byte&quot; class=&quot;headerlink&quot; title=&quot;IrandomAccessStream转byte[]&quot;&gt;&lt;/a&gt;IrandomAccessStream转byte[]&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stream stream = WindowsRuntimeStreamExtensions.AsStreamForRead(randomStream.GetInputStreamAt(0));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MemoryStream ms = new MemoryStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;await stream.CopyToAsync(ms);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;byte[] bytes = ms.ToArray();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天做8.1程序时彻底弄混了IRandomAcessStream和Stream。。。于是乎，我找了一个可用的不同类型转换。。。。&lt;/p&gt;
&lt;h3 id=&quot;Stream-转IRandomAccessStream&quot;&gt;&lt;a href=&quot;#Stream-转IRandomAccessStream&quot; class=&quot;headerlink&quot; title=&quot;Stream 转IRandomAccessStream&quot;&gt;&lt;/a&gt;Stream 转IRandomAccessStream&lt;/h3&gt;&lt;h4 id=&quot;方法一：&quot;&gt;&lt;a href=&quot;#方法一：&quot; class=&quot;headerlink&quot; title=&quot;方法一：&quot;&gt;&lt;/a&gt;方法一：&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;byte[] bytes = StreamToBytes(stream);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;InMemoryRandomAccessStream memoryStream = new InMemoryRandomAccessStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DataWriter datawriter = new DataWriter(memoryStream.GetOutputStreamAt(0));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datawriter.WriteBytes(bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;await datawriter.StoreAsync();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
